<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.10 on linux)" generated="20231010 21:32:05.829" rpa="false" schemaversion="4">
<suite id="s1" name="002 AtivacaoSemNumResidenciaViaFSL" source="/robot/test/SCRIPTS/TRG/FTTH/002_AtivacaoSemNumResidenciaViaFSL/002_AtivacaoSemNumResidenciaViaFSL.robot">
<test id="s1-t1" name="02.02-3 - Realizar Consulta de Logradouro" line="51">
<kw name="Inicia CT" library="DB">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${PORTAL}</var>
<arg>Variable Should Exist</arg>
<arg>${PORTAL}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${PORTAL}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20231010 21:32:09.339" endtime="20231010 21:32:09.340"/>
</kw>
<msg timestamp="20231010 21:32:09.340" level="INFO">${PORTAL} = True</msg>
<status status="PASS" starttime="20231010 21:32:09.339" endtime="20231010 21:32:09.340"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_step}</var>
<arg>Variable Should Exist</arg>
<arg>${STEP}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${STEP}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20231010 21:32:09.340" endtime="20231010 21:32:09.341"/>
</kw>
<msg timestamp="20231010 21:32:09.341" level="INFO">${check_step} = True</msg>
<status status="PASS" starttime="20231010 21:32:09.340" endtime="20231010 21:32:09.341"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PORTAL}</arg>
<arg>${PORTAL}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:09.341" level="INFO">${PORTAL} = True</msg>
<status status="PASS" starttime="20231010 21:32:09.341" endtime="20231010 21:32:09.341"/>
</kw>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Log" library="BuiltIn">
<arg>${CEP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:09.342" level="INFO">00000000</msg>
<status status="PASS" starttime="20231010 21:32:09.342" endtime="20231010 21:32:09.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${NUMERO}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:09.342" level="INFO">00</msg>
<status status="PASS" starttime="20231010 21:32:09.342" endtime="20231010 21:32:09.342"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${check_step}</arg>
<arg>Set Step</arg>
<arg>${STEP}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Step" library="DB">
<arg>${STEP}</arg>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STEP}</arg>
<arg>${STEP}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:09.344" level="INFO">${STEP} = 02_02_3_Realizar_Consulta_de_Logradouro</msg>
<status status="PASS" starttime="20231010 21:32:09.343" endtime="20231010 21:32:09.344"/>
</kw>
<status status="PASS" starttime="20231010 21:32:09.343" endtime="20231010 21:32:09.344"/>
</kw>
<status status="PASS" starttime="20231010 21:32:09.343" endtime="20231010 21:32:09.344"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPONSAVEL}</arg>
<arg>${RESPONSAVEL}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:09.345" level="INFO">${RESPONSAVEL} = galeite</msg>
<status status="PASS" starttime="20231010 21:32:09.344" endtime="20231010 21:32:09.345"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${AUTHENTICATION}</arg>
<arg>${AUTHENTICATION}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:09.345" level="INFO">${AUTHENTICATION} = Whitelabel</msg>
<status status="PASS" starttime="20231010 21:32:09.345" endtime="20231010 21:32:09.346"/>
</kw>
<kw name="Buscar Dat Do Usuario" library="dat">
<var>${DAT_DB}</var>
<arg>${RESPONSAVEL}</arg>
<arg>${STEP}</arg>
<msg timestamp="20231010 21:32:09.351" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:09.346" endtime="20231010 21:32:09.351"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${DAT_DB}</arg>
<arg>${DAT_DB}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:09.352" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:09.352" endtime="20231010 21:32:09.352"/>
</kw>
<status status="PASS" starttime="20231010 21:32:09.342" endtime="20231010 21:32:09.352"/>
</branch>
<status status="PASS" starttime="20231010 21:32:09.341" endtime="20231010 21:32:09.353"/>
</if>
<status status="PASS" starttime="20231010 21:32:09.338" endtime="20231010 21:32:09.353"/>
</kw>
<kw name="Retornar Token Vtal" library="RES_API">
<doc>Função que usa o usuario e senha para autenticar e receber o valor do Token para fazer as próximas requisições.
| ``HEADERS_TOKEN`` | Informações necessárias para o token, como qual ferramenta está executando. Exemplo:  User-Agent=RobotFramework. |
| ``USUARIO`` | Usuario cadastrado para fazer a autenticação. |
| ``SENHA`` | Senha cadastrado para fazer a autenticação. |
| ``validade_token`` | Variavel com o tempo que expira a validade do token, salva na planilha. |
A resposta é um retorno XML que contem:
- ``access_token`` &lt;str&gt; Cadeia de caracteres que serve de autenticação para requisições.
- ``token_type`` &lt;str&gt; Descrição do tipo de token, pode ser uma cadeia de str ou de int.
- ``expires_in`` &lt;int&gt; Valor em segundos que esse token será valido.
- ``scope`` &lt;str&gt; Escopo do token.
Alguns exemplos de como usar a função:
| Retornar Token Vtal
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#POST%20On%20Session|RequestsLibrary &gt;&gt;]</doc>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${Credencial}</var>
<arg>Credencial</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:32:09.359" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:32:09.355" endtime="20231010 21:32:09.359"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:09.364" level="INFO">${Valor} = Whitelabel</msg>
<status status="PASS" starttime="20231010 21:32:09.359" endtime="20231010 21:32:09.364"/>
</kw>
<status status="PASS" starttime="20231010 21:32:09.354" endtime="20231010 21:32:09.364"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.364" endtime="20231010 21:32:09.364"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.365" endtime="20231010 21:32:09.365"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.365" endtime="20231010 21:32:09.365"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.366" endtime="20231010 21:32:09.366"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.365" endtime="20231010 21:32:09.366"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:09.364" endtime="20231010 21:32:09.366"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.366" endtime="20231010 21:32:09.366"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.367" endtime="20231010 21:32:09.367"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:09.377" endtime="20231010 21:32:09.377"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.364" endtime="20231010 21:32:09.377"/>
</branch>
<status status="PASS" starttime="20231010 21:32:09.354" endtime="20231010 21:32:09.377"/>
</if>
<msg timestamp="20231010 21:32:09.378" level="INFO">${Credencial} = Whitelabel</msg>
<status status="PASS" starttime="20231010 21:32:09.354" endtime="20231010 21:32:09.378"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${TokenExcel}</var>
<arg>Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:32:09.381" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:32:09.379" endtime="20231010 21:32:09.381"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:09.386" level="INFO">${Valor} = </msg>
<status status="PASS" starttime="20231010 21:32:09.381" endtime="20231010 21:32:09.386"/>
</kw>
<status status="PASS" starttime="20231010 21:32:09.379" endtime="20231010 21:32:09.386"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.387" endtime="20231010 21:32:09.387"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.388" endtime="20231010 21:32:09.388"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.388" endtime="20231010 21:32:09.388"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.388" endtime="20231010 21:32:09.388"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.387" endtime="20231010 21:32:09.388"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:09.387" endtime="20231010 21:32:09.388"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.389" endtime="20231010 21:32:09.389"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.389" endtime="20231010 21:32:09.389"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:09.398" endtime="20231010 21:32:09.398"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.386" endtime="20231010 21:32:09.398"/>
</branch>
<status status="PASS" starttime="20231010 21:32:09.379" endtime="20231010 21:32:09.398"/>
</if>
<msg timestamp="20231010 21:32:09.398" level="INFO">${TokenExcel} = </msg>
<status status="PASS" starttime="20231010 21:32:09.378" endtime="20231010 21:32:09.398"/>
</kw>
<if>
<branch type="IF" condition="&quot;${Credencial}&quot; == &quot;Whitelabel&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais Whitelabel foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231010 21:32:09.399" endtime="20231010 21:32:09.399"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyMi1hMTQ0LTNhZGZjZjA2MWY2Mw==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:09.400" level="INFO">${Authorization} = Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyMi1hMTQ0LTNhZGZjZjA2MWY2Mw==</msg>
<status status="PASS" starttime="20231010 21:32:09.400" endtime="20231010 21:32:09.400"/>
</kw>
<status status="PASS" starttime="20231010 21:32:09.399" endtime="20231010 21:32:09.400"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;FTTP&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais FTTP foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.400" endtime="20231010 21:32:09.400"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic MzNkNTc3Y2QtYzZmMS00YzMxLTllYzgtMjRiY2IyZWYyMmI3OjQyNWZkYzUyLTIzMmMtNDQ2YS1iOTViLWQyNmFkZGZmYjBkYw==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.401" endtime="20231010 21:32:09.401"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.400" endtime="20231010 21:32:09.401"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;Bitstream&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais Bitstream foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.401" endtime="20231010 21:32:09.401"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic NDQ0MzdlMjAtMmFjNi00YzY3LTk2NzMtYTMyMDI2N2ZjNmE3OjE1M2ZkYmU4LTcxMzUtNDJiNC05MDQ5LTI4MDM2NmI4MDU2YQ==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.401" endtime="20231010 21:32:09.401"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.401" endtime="20231010 21:32:09.402"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;CPOI&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais CP OI foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.402" endtime="20231010 21:32:09.402"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic Yzg2MzhhNTUtYTdmNC00OTBlLWIyNGItNWZhNjQxMDUwZDQyOmNjZjUyYzc3LTliN2UtNGM2NC04M2NkLTIwZmY3YWQzZjFkZQ==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.403" endtime="20231010 21:32:09.403"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.402" endtime="20231010 21:32:09.403"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;Voip&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais Voip foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.403" endtime="20231010 21:32:09.403"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic Yzg2MzhhNTUtYTdmNC00OTBlLWIyNGItNWZhNjQxMDUwZDQyOmNjZjUyYzc3LTliN2UtNGM2NC04M2NkLTIwZmY3YWQzZjFkZQ==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.404" endtime="20231010 21:32:09.404"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.403" endtime="20231010 21:32:09.404"/>
</branch>
<status status="PASS" starttime="20231010 21:32:09.398" endtime="20231010 21:32:09.404"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${HeaderToken}</var>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
<arg>User-Agent=RobotFramework</arg>
<arg>Accept=*/*</arg>
<arg>Authorization=${Authorization}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231010 21:32:09.405" level="INFO">${HeaderToken} = {'Content-Type': 'application/x-www-form-urlencoded', 'User-Agent': 'RobotFramework', 'Accept': '*/*', 'Authorization': 'Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyM...</msg>
<status status="PASS" starttime="20231010 21:32:09.404" endtime="20231010 21:32:09.405"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${UrlApi}</var>
<arg>URL_Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:32:09.409" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:32:09.406" endtime="20231010 21:32:09.409"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:09.414" level="INFO">${Valor} = https://apitrg.vtal.com.br</msg>
<status status="PASS" starttime="20231010 21:32:09.409" endtime="20231010 21:32:09.415"/>
</kw>
<status status="PASS" starttime="20231010 21:32:09.406" endtime="20231010 21:32:09.415"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.415" endtime="20231010 21:32:09.416"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.416" endtime="20231010 21:32:09.416"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.416" endtime="20231010 21:32:09.417"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.417" endtime="20231010 21:32:09.417"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.416" endtime="20231010 21:32:09.417"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:09.416" endtime="20231010 21:32:09.417"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.417" endtime="20231010 21:32:09.418"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.418" endtime="20231010 21:32:09.418"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:09.435" endtime="20231010 21:32:09.436"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.415" endtime="20231010 21:32:09.436"/>
</branch>
<status status="PASS" starttime="20231010 21:32:09.406" endtime="20231010 21:32:09.436"/>
</if>
<msg timestamp="20231010 21:32:09.436" level="INFO">${UrlApi} = https://apitrg.vtal.com.br</msg>
<status status="PASS" starttime="20231010 21:32:09.405" endtime="20231010 21:32:09.436"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${Usuario}</var>
<arg>Usuario_Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:32:09.442" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:32:09.438" endtime="20231010 21:32:09.442"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:09.457" level="INFO">${Valor} = d6c3e319-d388-4128-96f8-154da4c71526</msg>
<status status="PASS" starttime="20231010 21:32:09.442" endtime="20231010 21:32:09.457"/>
</kw>
<status status="PASS" starttime="20231010 21:32:09.438" endtime="20231010 21:32:09.457"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.458" endtime="20231010 21:32:09.458"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.459" endtime="20231010 21:32:09.459"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.459" endtime="20231010 21:32:09.459"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.460" endtime="20231010 21:32:09.460"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.458" endtime="20231010 21:32:09.460"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:09.458" endtime="20231010 21:32:09.460"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.461" endtime="20231010 21:32:09.461"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.461" endtime="20231010 21:32:09.461"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:09.482" endtime="20231010 21:32:09.482"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.457" endtime="20231010 21:32:09.482"/>
</branch>
<status status="PASS" starttime="20231010 21:32:09.438" endtime="20231010 21:32:09.482"/>
</if>
<msg timestamp="20231010 21:32:09.483" level="INFO">${Usuario} = d6c3e319-d388-4128-96f8-154da4c71526</msg>
<status status="PASS" starttime="20231010 21:32:09.437" endtime="20231010 21:32:09.483"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${Senha}</var>
<arg>Senha_Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:32:09.494" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:32:09.485" endtime="20231010 21:32:09.494"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:09.502" level="INFO">${Valor} = 0917ff46-9ed9-4dea-babd-baba3e2a55e3</msg>
<status status="PASS" starttime="20231010 21:32:09.495" endtime="20231010 21:32:09.502"/>
</kw>
<status status="PASS" starttime="20231010 21:32:09.484" endtime="20231010 21:32:09.502"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.505" endtime="20231010 21:32:09.506"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.507" endtime="20231010 21:32:09.507"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.508" endtime="20231010 21:32:09.508"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.509" endtime="20231010 21:32:09.509"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.506" endtime="20231010 21:32:09.509"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:09.506" endtime="20231010 21:32:09.509"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.510" endtime="20231010 21:32:09.510"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:09.511" endtime="20231010 21:32:09.511"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:09.531" endtime="20231010 21:32:09.532"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:09.502" endtime="20231010 21:32:09.532"/>
</branch>
<status status="PASS" starttime="20231010 21:32:09.484" endtime="20231010 21:32:09.532"/>
</if>
<msg timestamp="20231010 21:32:09.533" level="INFO">${Senha} = 0917ff46-9ed9-4dea-babd-baba3e2a55e3</msg>
<status status="PASS" starttime="20231010 21:32:09.483" endtime="20231010 21:32:09.533"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${UrlApi}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231010 21:32:09.534" level="INFO">${UrlApi} = https://apitrg.vtal.com.br</msg>
<status status="PASS" starttime="20231010 21:32:09.533" endtime="20231010 21:32:09.534"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${Usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231010 21:32:09.535" level="INFO">${Usuario} = d6c3e319-d388-4128-96f8-154da4c71526</msg>
<status status="PASS" starttime="20231010 21:32:09.534" endtime="20231010 21:32:09.535"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${Senha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231010 21:32:09.536" level="INFO">${Senha} = 0917ff46-9ed9-4dea-babd-baba3e2a55e3</msg>
<status status="PASS" starttime="20231010 21:32:09.535" endtime="20231010 21:32:09.536"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>StartAPI</arg>
<arg>${UrlApi}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231010 21:32:09.539" level="INFO">Creating Session using : alias=StartAPI, url=https://apitrg.vtal.com.br, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20231010 21:32:09.536" endtime="20231010 21:32:09.540"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>StartAPI</arg>
<arg>${AUTH}</arg>
<arg>data={"username":"${Usuario}","password":"${Senha}"}</arg>
<arg>headers=${HeaderToken}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20231010 21:32:10.839" level="INFO">POST Request : url=https://apitrg.vtal.com.br/auth/oauth/v2/token?grant_type=client_credentials&amp;scope=fttx 
 path_url=/auth/oauth/v2/token?grant_type=client_credentials&amp;scope=fttx 
 headers={'User-Agent': 'RobotFramework', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyMi1hMTQ0LTNhZGZjZjA2MWY2Mw==', 'Content-Length': '101'} 
 body={"username":"d6c3e319-d388-4128-96f8-154da4c71526","password":"0917ff46-9ed9-4dea-babd-baba3e2a55e3"} 
 </msg>
<msg timestamp="20231010 21:32:10.840" level="INFO">POST Response : url=https://apitrg.vtal.com.br/auth/oauth/v2/token?grant_type=client_credentials&amp;scope=fttx 
 status=200, reason=OK 
 headers={'Pragma': 'no-cache', 'Cache-Control': 'no-store', 'Content-Encoding': 'gzip', 'Content-Type': 'application/json;charset=UTF-8', 'Content-Length': '127', 'Date': 'Tue, 10 Oct 2023 21:32:12 GMT', 'Server': 'Layer7-API-Gateway', 'Set-Cookie': 'BIGipServerRD16_POOL_APIGQX02LB_8443=rd16o00000000000000000000ffffac128415o8443; path=/; Httponly; Secure'} 
 body={
  "access_token":"9c8b510d-88ae-40d2-9f5e-02fdb48d03fc",
  "token_type":"Bearer",
  "expires_in":3600,
  "scope":"fttx"
} 
 </msg>
<msg timestamp="20231010 21:32:10.842" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231010 21:32:09.541" endtime="20231010 21:32:10.842"/>
</kw>
<kw name="Valida Retorno da API" library="RES_API">
<arg>${Response.status_code}</arg>
<arg>200</arg>
<arg>Retornar Token Vtal</arg>
<doc>Função usada para mandar validar o retorno da API, caso um retorno 500 seja dado muitas vezes ou  um retorno diferente do esperado ele cria um documento de defect.
| =Arguments= | =Description= |
| ``STATUS_RECEBIDO`` | Recebe o status de Retorno da API. exemplo: ``404(Not Found)``. |
| ``STATUS_ESPERADO`` | Recebe o status Esperado da API. exemplo: ``200(Ok)``. |
| ``FUNCAO_API`` | Recebe o nome da função para que ela execute novamente caso seja diferente o resultado: exemplo: ``Retornar Address Id``. |
A resposta é um retorno JSON que contem:
- ``type`` &lt;int&gt; Tipo da resposta do Retorno. Exemplo: S(Sucesso) e E(ERRO).
- ``code`` &lt;int&gt; Codigo da reposta do retorno. Exemplo: 200(Ok) 404(Not Found).
- ``message`` &lt;str&gt; Descrição do código de retorno. Exemplo: 200(Ok) 404(Not Found).
Alguns exemplos de como usar a função:
| Valida Retorno da API                   200                 200                                     Retornar Address Id
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#PATCH|RequestsLibrary &gt;&gt;]</doc>
<if>
<branch type="IF" condition="'${status_recebido}' == '500'">
<kw name="Evaluate" library="BuiltIn">
<var>${Counter_API}</var>
<arg>${Counter_API} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231010 21:32:10.860" endtime="20231010 21:32:10.860"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Counter_API}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:10.860" endtime="20231010 21:32:10.860"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>\nErro ${status_recebido} recebido, tentando novamente!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:10.861" endtime="20231010 21:32:10.861"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231010 21:32:10.861" endtime="20231010 21:32:10.861"/>
</kw>
<if>
<branch type="IF" condition="&quot;${Counter_API}&quot; == &quot;3&quot;">
<kw name="Fatal Error" library="BuiltIn">
<arg>\nApós 3 execuções a API continua retornando erro ${status_esperado}</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20231010 21:32:10.862" endtime="20231010 21:32:10.862"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:10.861" endtime="20231010 21:32:10.862"/>
</branch>
<status status="NOT RUN" starttime="20231010 21:32:10.861" endtime="20231010 21:32:10.862"/>
</if>
<kw name="Run Keyword" library="BuiltIn">
<arg>${Funcao_API}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231010 21:32:10.862" endtime="20231010 21:32:10.863"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:10.859" endtime="20231010 21:32:10.863"/>
</branch>
<branch type="ELSE IF" condition="'${status_recebido}' != '${status_esperado}'">
<kw name="Fatal Error" library="BuiltIn">
<arg>\n Retorno da API diferente do esperado ${status_recebido} != ${status_esperado}</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20231010 21:32:10.863" endtime="20231010 21:32:10.864"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:10.863" endtime="20231010 21:32:10.864"/>
</branch>
<status status="PASS" starttime="20231010 21:32:10.858" endtime="20231010 21:32:10.864"/>
</if>
<status status="PASS" starttime="20231010 21:32:10.850" endtime="20231010 21:32:10.864"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${Token}</var>
<arg>${Response.json()}</arg>
<arg>access_token</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20231010 21:32:10.879" level="INFO">${Token} = 9c8b510d-88ae-40d2-9f5e-02fdb48d03fc</msg>
<status status="PASS" starttime="20231010 21:32:10.864" endtime="20231010 21:32:10.879"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:10.880" level="INFO">${Token} = 9c8b510d-88ae-40d2-9f5e-02fdb48d03fc</msg>
<status status="PASS" starttime="20231010 21:32:10.880" endtime="20231010 21:32:10.880"/>
</kw>
<status status="PASS" starttime="20231010 21:32:09.353" endtime="20231010 21:32:10.881"/>
</kw>
<kw name="Consulta Id Logradouro" library="ROB0001_ConsultarIdEndereco">
<arg>UF=BAHIA</arg>
<arg>Municipio=FEIRA DE SANTANA</arg>
<tag>ConsultaIdLogradouro</tag>
<doc>Keyword encadeador TRG</doc>
<kw name="Retornar Address Id" library="ROB0001_ConsultarIdEndereco">
<arg>${UF}</arg>
<arg>${Municipio}</arg>
<tag>RetornarAddressId</tag>
<doc>Função usada para iniciar a API, permitindo assim fazer as requests via GET com o objetivo retornar o Address ID, armazenar
e escrever dados na DAT relativa ao cenário.
| ``URL_API`` | A URL base para a criação das requisições. ``https://apitrg.vtal.com.br/api/geographicAddressManagement/v1/geographicAddress?address=``.|</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="&quot;${CEP}&quot; != &quot;00000000&quot; and &quot;${NUMERO}&quot; != &quot;00&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${ADDRESS}</var>
<arg>${CEP}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:32:10.884" endtime="20231010 21:32:10.884"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${NUMBER}</var>
<arg>${NUMERO}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:32:10.885" endtime="20231010 21:32:10.885"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:10.883" endtime="20231010 21:32:10.885"/>
</branch>
<branch type="ELSE">
<kw name="Buscar Endereco Nao Utilizado" library="endereco">
<var>${Data}</var>
<arg>${UF}</arg>
<arg>${Municipio}</arg>
<msg timestamp="20231010 21:32:10.902" level="INFO">11386</msg>
<msg timestamp="20231010 21:32:10.902" level="INFO">${Data} = 11386</msg>
<status status="PASS" starttime="20231010 21:32:10.885" endtime="20231010 21:32:10.902"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${Data}' == 'None'</arg>
<arg>Fail</arg>
<arg>Nenhum endereço disponivel no momento. Atualize sua base de dados</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231010 21:32:10.903" endtime="20231010 21:32:10.903"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Data}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:10.905" level="INFO">${Data} = 11386</msg>
<status status="PASS" starttime="20231010 21:32:10.904" endtime="20231010 21:32:10.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${ADDRESS}</var>
<arg>${Data.Cep}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:10.912" level="INFO">${ADDRESS} = 44075315</msg>
<status status="PASS" starttime="20231010 21:32:10.905" endtime="20231010 21:32:10.912"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${NUMBER}</var>
<arg>${Data.Numero}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:10.918" level="INFO">${NUMBER} = 83</msg>
<status status="PASS" starttime="20231010 21:32:10.912" endtime="20231010 21:32:10.919"/>
</kw>
<kw name="Atualizar Endereco" library="endereco">
<arg>${Data}</arg>
<msg timestamp="20231010 21:32:10.928" level="INFO">Endereco atualizado com sucesso!</msg>
<status status="PASS" starttime="20231010 21:32:10.919" endtime="20231010 21:32:10.928"/>
</kw>
<status status="PASS" starttime="20231010 21:32:10.885" endtime="20231010 21:32:10.928"/>
</branch>
<status status="PASS" starttime="20231010 21:32:10.883" endtime="20231010 21:32:10.929"/>
</if>
<status status="PASS" starttime="20231010 21:32:10.883" endtime="20231010 21:32:10.929"/>
</branch>
<branch type="ELSE">
<kw name="Ler Variavel na Planilha" library="RES_EXCEL">
<var>${ADDRESS}</var>
<arg>Address</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha</doc>
<status status="NOT RUN" starttime="20231010 21:32:10.929" endtime="20231010 21:32:10.930"/>
</kw>
<kw name="Ler Variavel na Planilha" library="RES_EXCEL">
<var>${NUMBER}</var>
<arg>Number</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha</doc>
<status status="NOT RUN" starttime="20231010 21:32:10.930" endtime="20231010 21:32:10.930"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:10.929" endtime="20231010 21:32:10.930"/>
</branch>
<status status="PASS" starttime="20231010 21:32:10.883" endtime="20231010 21:32:10.930"/>
</if>
<kw name="GET_API" library="RES_API">
<var>${Response}</var>
<arg>${API_BASEGEOGRAPHICADDRES}/geographicAddress?address=${ADDRESS}&amp;number=${NUMBER}</arg>
<doc>Função usada para mandar um GET request para a API.
| =Arguments= | =Description= |
| ``REQUEST_URL`` | A URL requisitada para a requisição. exemplo: ``/api/foo``. |
A resposta é um retorno JSON que contem:
- ``type`` &lt;int&gt; Tipo da resposta do Retorno. Exemplo: S(Sucesso) e E(ERRO).
- ``code`` &lt;int&gt; Codigo da reposta do retorno. Exemplo: 200(Ok) 404(Not Found).
- ``message`` &lt;str&gt; Descrição do código de retorno. Exemplo: 200(Ok) 404(Not Found).
Alguns exemplos de como usar a função:
| ${RESPONSE}=                          GET_API                                 https://apitrg.vtal.com.br/api/geographicAddressManagement/v1/addressComplements/195371</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>StartAPI</arg>
<arg>${URL_API}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231010 21:32:10.944" level="INFO">Creating Session using : alias=StartAPI, url=https://apitrg.vtal.com.br, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20231010 21:32:10.944" endtime="20231010 21:32:10.945"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${HEADERS}</var>
<arg>Content-Type=${CONTENT_TYPE}</arg>
<arg>User-Agent=RobotFramework</arg>
<arg>Accept=*/*</arg>
<arg>Authorization=Bearer ${TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231010 21:32:10.946" level="INFO">${HEADERS} = {'Content-Type': 'application/json; charset=iso-8859-1', 'User-Agent': 'RobotFramework', 'Accept': '*/*', 'Authorization': 'Bearer 9c8b510d-88ae-40d2-9f5e-02fdb48d03fc'}</msg>
<status status="PASS" starttime="20231010 21:32:10.945" endtime="20231010 21:32:10.946"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>StartAPI</arg>
<arg>${REQUEST_URL}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20231010 21:32:12.314" level="INFO">GET Request : url=https://apitrg.vtal.com.br/api/geographicAddressManagement/v1/geographicAddress?address=44075315&amp;number=83 
 path_url=/api/geographicAddressManagement/v1/geographicAddress?address=44075315&amp;number=83 
 headers={'User-Agent': 'RobotFramework', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json; charset=iso-8859-1', 'Authorization': 'Bearer 9c8b510d-88ae-40d2-9f5e-02fdb48d03fc'} 
 body=None 
 </msg>
<msg timestamp="20231010 21:32:12.314" level="INFO">GET Response : url=https://apitrg.vtal.com.br/api/geographicAddressManagement/v1/geographicAddress?address=44075315&amp;number=83 
 status=200, reason=OK 
 headers={'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Pragma': 'no-cache', 'Expires': '0', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Content-Security-Policy': "script-src 'self'", 'Set-Cookie': 'JSESSIONID=234792C3AB59E326CC638DB9D3CCCBCE; Path=/api/geographicAddressManagement/v1; Secure; HttpOnly; Domain=apitrg.vtal.com.br, 3ec834e8bc404687c2252f5841e90c4a=4fc3bb32df8683c2a949ac92a2ed7be7; Path=/api/geographicAddressManagement/v1; HttpOnly; Secure; SameSite=None; Domain=apitrg.vtal.com.br, BIGipServerRD16_POOL_APIGQX02LB_8443=rd16o00000000000000000000ffffac128416o8443; path=/; Httponly; Secure', 'Content-Encoding': 'gzip', 'Content-Type': 'application/json', 'Content-Length': '304', 'Date': 'Tue, 10 Oct 2023 21:32:14 GMT', 'Server': 'Layer7-API-Gateway'} 
 body={"control":{"type":"S","code":"200","message":"OK"},"addresses":{"address":[{"id":200454,"description":"Rua Angra Dos Reis 83, Ponto Central - Feira De Santana, BA (44075-315)","zipCode":"44075315","number":"83","stateAbbreviation":"BA","state":"Bahia","city":"Feira De Santana","cityCode":"2910800","locationCode":"71220","locationAbbreviation":"FSA","location":"Feira De Santana","neighborhood":"Ponto Central","streetName":"Angra Dos Reis","streetType":"Rua","hasNumber":true,"locationUniqueZipCode":false}]}} 
 </msg>
<msg timestamp="20231010 21:32:12.314" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231010 21:32:10.946" endtime="20231010 21:32:12.314"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:12.315" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231010 21:32:12.315" endtime="20231010 21:32:12.315"/>
</kw>
<msg timestamp="20231010 21:32:12.316" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231010 21:32:10.943" endtime="20231010 21:32:12.316"/>
</kw>
<kw name="Valida Retorno da API" library="RES_API">
<arg>${Response.status_code}</arg>
<arg>200</arg>
<arg>Retornar Address Id</arg>
<doc>Função usada para mandar validar o retorno da API, caso um retorno 500 seja dado muitas vezes ou  um retorno diferente do esperado ele cria um documento de defect.
| =Arguments= | =Description= |
| ``STATUS_RECEBIDO`` | Recebe o status de Retorno da API. exemplo: ``404(Not Found)``. |
| ``STATUS_ESPERADO`` | Recebe o status Esperado da API. exemplo: ``200(Ok)``. |
| ``FUNCAO_API`` | Recebe o nome da função para que ela execute novamente caso seja diferente o resultado: exemplo: ``Retornar Address Id``. |
A resposta é um retorno JSON que contem:
- ``type`` &lt;int&gt; Tipo da resposta do Retorno. Exemplo: S(Sucesso) e E(ERRO).
- ``code`` &lt;int&gt; Codigo da reposta do retorno. Exemplo: 200(Ok) 404(Not Found).
- ``message`` &lt;str&gt; Descrição do código de retorno. Exemplo: 200(Ok) 404(Not Found).
Alguns exemplos de como usar a função:
| Valida Retorno da API                   200                 200                                     Retornar Address Id
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#PATCH|RequestsLibrary &gt;&gt;]</doc>
<if>
<branch type="IF" condition="'${status_recebido}' == '500'">
<kw name="Evaluate" library="BuiltIn">
<var>${Counter_API}</var>
<arg>${Counter_API} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.328" endtime="20231010 21:32:12.329"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Counter_API}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.329" endtime="20231010 21:32:12.329"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>\nErro ${status_recebido} recebido, tentando novamente!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.329" endtime="20231010 21:32:12.329"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.330" endtime="20231010 21:32:12.330"/>
</kw>
<if>
<branch type="IF" condition="&quot;${Counter_API}&quot; == &quot;3&quot;">
<kw name="Fatal Error" library="BuiltIn">
<arg>\nApós 3 execuções a API continua retornando erro ${status_esperado}</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.330" endtime="20231010 21:32:12.330"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.330" endtime="20231010 21:32:12.330"/>
</branch>
<status status="NOT RUN" starttime="20231010 21:32:12.330" endtime="20231010 21:32:12.330"/>
</if>
<kw name="Run Keyword" library="BuiltIn">
<arg>${Funcao_API}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.331" endtime="20231010 21:32:12.331"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.328" endtime="20231010 21:32:12.331"/>
</branch>
<branch type="ELSE IF" condition="'${status_recebido}' != '${status_esperado}'">
<kw name="Fatal Error" library="BuiltIn">
<arg>\n Retorno da API diferente do esperado ${status_recebido} != ${status_esperado}</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.331" endtime="20231010 21:32:12.332"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.331" endtime="20231010 21:32:12.332"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.328" endtime="20231010 21:32:12.332"/>
</if>
<status status="PASS" starttime="20231010 21:32:12.321" endtime="20231010 21:32:12.332"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${typeLogradouro}</var>
<arg>${Response.json()}</arg>
<arg>$.addresses.address[0].streetType</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:12.367" level="INFO">${typeLogradouro} = ['Rua']</msg>
<status status="PASS" starttime="20231010 21:32:12.332" endtime="20231010 21:32:12.367"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${streetName}</var>
<arg>${Response.json()}</arg>
<arg>$.addresses.address[0].streetName</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:12.402" level="INFO">${streetName} = ['Angra Dos Reis']</msg>
<status status="PASS" starttime="20231010 21:32:12.368" endtime="20231010 21:32:12.402"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${uf_logradouro}</var>
<arg>${Response.json()}</arg>
<arg>$.addresses.address[0].stateAbbreviation</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:12.426" level="INFO">${uf_logradouro} = ['BA']</msg>
<status status="PASS" starttime="20231010 21:32:12.402" endtime="20231010 21:32:12.426"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${cidade_logradouro}</var>
<arg>${Response.json()}</arg>
<arg>$.addresses.address[0].city</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:12.492" level="INFO">${cidade_logradouro} = ['Feira De Santana']</msg>
<status status="PASS" starttime="20231010 21:32:12.427" endtime="20231010 21:32:12.492"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${bairro_logradouro}</var>
<arg>${Response.json()}</arg>
<arg>$.addresses.address[0].neighborhood</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:12.516" level="INFO">${bairro_logradouro} = ['Ponto Central']</msg>
<status status="PASS" starttime="20231010 21:32:12.493" endtime="20231010 21:32:12.516"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${ADDRESS_ID}</var>
<arg>${Response.json()}</arg>
<arg>$.addresses.address[0].id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:12.540" level="INFO">${ADDRESS_ID} = [200454]</msg>
<status status="PASS" starttime="20231010 21:32:12.516" endtime="20231010 21:32:12.540"/>
</kw>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${ADDRESS_ID[0]}</arg>
<arg>addressId</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.546" endtime="20231010 21:32:12.546"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.545" endtime="20231010 21:32:12.546"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.545" endtime="20231010 21:32:12.546"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:12.556" level="INFO">32</msg>
<msg timestamp="20231010 21:32:12.556" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:12.546" endtime="20231010 21:32:12.556"/>
</kw>
<status status="PASS" starttime="20231010 21:32:12.545" endtime="20231010 21:32:12.556"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.557" endtime="20231010 21:32:12.557"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.557" endtime="20231010 21:32:12.557"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.558" endtime="20231010 21:32:12.558"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.558" endtime="20231010 21:32:12.558"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.557" endtime="20231010 21:32:12.559"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:12.557" endtime="20231010 21:32:12.559"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.559" endtime="20231010 21:32:12.559"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.559" endtime="20231010 21:32:12.559"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.559" endtime="20231010 21:32:12.559"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:12.566" endtime="20231010 21:32:12.566"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.556" endtime="20231010 21:32:12.566"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.545" endtime="20231010 21:32:12.566"/>
</if>
<status status="PASS" starttime="20231010 21:32:12.540" endtime="20231010 21:32:12.567"/>
</kw>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${typeLogradouro[0]}</arg>
<arg>typeLogradouro</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.573" endtime="20231010 21:32:12.573"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.572" endtime="20231010 21:32:12.573"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.572" endtime="20231010 21:32:12.573"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:12.581" level="INFO">32</msg>
<msg timestamp="20231010 21:32:12.581" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:12.573" endtime="20231010 21:32:12.581"/>
</kw>
<status status="PASS" starttime="20231010 21:32:12.572" endtime="20231010 21:32:12.581"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.581" endtime="20231010 21:32:12.582"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.582" endtime="20231010 21:32:12.582"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.582" endtime="20231010 21:32:12.582"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.582" endtime="20231010 21:32:12.582"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.582" endtime="20231010 21:32:12.582"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:12.582" endtime="20231010 21:32:12.582"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.583" endtime="20231010 21:32:12.583"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.583" endtime="20231010 21:32:12.583"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.583" endtime="20231010 21:32:12.583"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:12.592" endtime="20231010 21:32:12.592"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.581" endtime="20231010 21:32:12.592"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.572" endtime="20231010 21:32:12.592"/>
</if>
<status status="PASS" starttime="20231010 21:32:12.567" endtime="20231010 21:32:12.592"/>
</kw>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${streetName[0]}</arg>
<arg>addressName</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.597" endtime="20231010 21:32:12.597"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.596" endtime="20231010 21:32:12.597"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.596" endtime="20231010 21:32:12.597"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:12.606" level="INFO">32</msg>
<msg timestamp="20231010 21:32:12.606" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:12.597" endtime="20231010 21:32:12.606"/>
</kw>
<status status="PASS" starttime="20231010 21:32:12.596" endtime="20231010 21:32:12.607"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.607" endtime="20231010 21:32:12.607"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.608" endtime="20231010 21:32:12.608"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.608" endtime="20231010 21:32:12.609"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.609" endtime="20231010 21:32:12.609"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.608" endtime="20231010 21:32:12.609"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:12.607" endtime="20231010 21:32:12.609"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.609" endtime="20231010 21:32:12.609"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.609" endtime="20231010 21:32:12.609"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.610" endtime="20231010 21:32:12.610"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:12.617" endtime="20231010 21:32:12.617"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.607" endtime="20231010 21:32:12.617"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.596" endtime="20231010 21:32:12.617"/>
</if>
<status status="PASS" starttime="20231010 21:32:12.593" endtime="20231010 21:32:12.617"/>
</kw>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${uf_logradouro[0]}</arg>
<arg>UF</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.624" endtime="20231010 21:32:12.624"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.624" endtime="20231010 21:32:12.624"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.624" endtime="20231010 21:32:12.624"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:12.633" level="INFO">32</msg>
<msg timestamp="20231010 21:32:12.633" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:12.625" endtime="20231010 21:32:12.633"/>
</kw>
<status status="PASS" starttime="20231010 21:32:12.623" endtime="20231010 21:32:12.633"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.634" endtime="20231010 21:32:12.634"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.635" endtime="20231010 21:32:12.635"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.635" endtime="20231010 21:32:12.635"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.635" endtime="20231010 21:32:12.635"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.634" endtime="20231010 21:32:12.635"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:12.634" endtime="20231010 21:32:12.635"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.636" endtime="20231010 21:32:12.636"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.636" endtime="20231010 21:32:12.636"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.636" endtime="20231010 21:32:12.636"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:12.645" endtime="20231010 21:32:12.645"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.634" endtime="20231010 21:32:12.645"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.623" endtime="20231010 21:32:12.645"/>
</if>
<status status="PASS" starttime="20231010 21:32:12.617" endtime="20231010 21:32:12.645"/>
</kw>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${cidade_logradouro[0]}</arg>
<arg>Cidade</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.650" endtime="20231010 21:32:12.650"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.650" endtime="20231010 21:32:12.650"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.650" endtime="20231010 21:32:12.650"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:12.660" level="INFO">32</msg>
<msg timestamp="20231010 21:32:12.660" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:12.651" endtime="20231010 21:32:12.660"/>
</kw>
<status status="PASS" starttime="20231010 21:32:12.650" endtime="20231010 21:32:12.661"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.661" endtime="20231010 21:32:12.661"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.661" endtime="20231010 21:32:12.662"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.662" endtime="20231010 21:32:12.662"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.663" endtime="20231010 21:32:12.663"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.661" endtime="20231010 21:32:12.663"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:12.661" endtime="20231010 21:32:12.663"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.663" endtime="20231010 21:32:12.663"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.663" endtime="20231010 21:32:12.663"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.663" endtime="20231010 21:32:12.663"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:12.672" endtime="20231010 21:32:12.672"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.661" endtime="20231010 21:32:12.672"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.650" endtime="20231010 21:32:12.672"/>
</if>
<status status="PASS" starttime="20231010 21:32:12.646" endtime="20231010 21:32:12.672"/>
</kw>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${bairro_logradouro[0]}</arg>
<arg>Bairro</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.678" endtime="20231010 21:32:12.678"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.678" endtime="20231010 21:32:12.678"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.677" endtime="20231010 21:32:12.678"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:12.689" level="INFO">32</msg>
<msg timestamp="20231010 21:32:12.689" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:12.679" endtime="20231010 21:32:12.689"/>
</kw>
<status status="PASS" starttime="20231010 21:32:12.677" endtime="20231010 21:32:12.689"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.689" endtime="20231010 21:32:12.690"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.690" endtime="20231010 21:32:12.690"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.690" endtime="20231010 21:32:12.690"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.691" endtime="20231010 21:32:12.691"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.690" endtime="20231010 21:32:12.691"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:12.690" endtime="20231010 21:32:12.691"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.691" endtime="20231010 21:32:12.691"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.691" endtime="20231010 21:32:12.691"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.691" endtime="20231010 21:32:12.692"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:12.699" endtime="20231010 21:32:12.699"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.689" endtime="20231010 21:32:12.699"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.677" endtime="20231010 21:32:12.699"/>
</if>
<status status="PASS" starttime="20231010 21:32:12.672" endtime="20231010 21:32:12.699"/>
</kw>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${ADDRESS}</arg>
<arg>Address</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.700" endtime="20231010 21:32:12.700"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.700" endtime="20231010 21:32:12.700"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.700" endtime="20231010 21:32:12.700"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:12.710" level="INFO">32</msg>
<msg timestamp="20231010 21:32:12.710" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:12.701" endtime="20231010 21:32:12.710"/>
</kw>
<status status="PASS" starttime="20231010 21:32:12.700" endtime="20231010 21:32:12.710"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.711" endtime="20231010 21:32:12.711"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.711" endtime="20231010 21:32:12.711"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.712" endtime="20231010 21:32:12.712"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.712" endtime="20231010 21:32:12.713"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.711" endtime="20231010 21:32:12.713"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:12.711" endtime="20231010 21:32:12.713"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.713" endtime="20231010 21:32:12.713"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.713" endtime="20231010 21:32:12.713"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.713" endtime="20231010 21:32:12.713"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:12.722" endtime="20231010 21:32:12.722"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.710" endtime="20231010 21:32:12.722"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.700" endtime="20231010 21:32:12.722"/>
</if>
<status status="PASS" starttime="20231010 21:32:12.699" endtime="20231010 21:32:12.722"/>
</kw>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${NUMBER}</arg>
<arg>Number</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.723" endtime="20231010 21:32:12.724"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.723" endtime="20231010 21:32:12.724"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.723" endtime="20231010 21:32:12.724"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:12.732" level="INFO">32</msg>
<msg timestamp="20231010 21:32:12.732" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:12.724" endtime="20231010 21:32:12.732"/>
</kw>
<status status="PASS" starttime="20231010 21:32:12.723" endtime="20231010 21:32:12.733"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.733" endtime="20231010 21:32:12.733"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.734" endtime="20231010 21:32:12.734"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.734" endtime="20231010 21:32:12.734"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.735" endtime="20231010 21:32:12.735"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.734" endtime="20231010 21:32:12.735"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:12.733" endtime="20231010 21:32:12.735"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.735" endtime="20231010 21:32:12.735"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.736" endtime="20231010 21:32:12.736"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:12.736" endtime="20231010 21:32:12.736"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:12.749" endtime="20231010 21:32:12.750"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:12.733" endtime="20231010 21:32:12.750"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.723" endtime="20231010 21:32:12.750"/>
</if>
<status status="PASS" starttime="20231010 21:32:12.722" endtime="20231010 21:32:12.750"/>
</kw>
<status status="PASS" starttime="20231010 21:32:10.882" endtime="20231010 21:32:12.750"/>
</kw>
<status status="PASS" starttime="20231010 21:32:10.881" endtime="20231010 21:32:12.750"/>
</kw>
<kw name="Fecha CT" library="DB">
<arg>API</arg>
<arg>02_04_5_Realizar_Consulta_de_Viabilidade</arg>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Log" library="BuiltIn">
<arg>${DAT_DB}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:12.751" level="INFO">32</msg>
<status status="PASS" starttime="20231010 21:32:12.751" endtime="20231010 21:32:12.752"/>
</kw>
<kw name="Atualizar Steps Dat" library="dat">
<arg>${DAT_DB}</arg>
<arg>${RESPONSAVEL}</arg>
<arg>${SYSTEM}</arg>
<arg>${NEW_STEP}</arg>
<msg timestamp="20231010 21:32:12.760" level="INFO">DAT atualizado com sucesso!</msg>
<status status="PASS" starttime="20231010 21:32:12.752" endtime="20231010 21:32:12.761"/>
</kw>
<status status="PASS" starttime="20231010 21:32:12.751" endtime="20231010 21:32:12.761"/>
</branch>
<status status="PASS" starttime="20231010 21:32:12.751" endtime="20231010 21:32:12.761"/>
</if>
<status status="PASS" starttime="20231010 21:32:12.750" endtime="20231010 21:32:12.761"/>
</kw>
<tag>02_02_3_Realizar_Consulta_de_Logradouro</tag>
<tag>COMPLETO</tag>
<status status="PASS" starttime="20231010 21:32:09.333" endtime="20231010 21:32:12.761"/>
</test>
<doc>Agrupador responsavel por chamar TC dos ROBS referentes ao cenario
INPUT: Address, Customer_Name, Phone_Number, Reference,
OUTPUT: Address_Id, TypeComplement1, Value1, TypeComplement2, Value2, TypeComplement3, Value3,</doc>
<status status="PASS" starttime="20231010 21:32:05.833" endtime="20231010 21:32:12.776"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">02_02_3_Realizar_Consulta_de_Logradouro</stat>
<stat pass="1" fail="0" skip="0">COMPLETO</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="002 AtivacaoSemNumResidenciaViaFSL">002 AtivacaoSemNumResidenciaViaFSL</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20231010 21:32:06.145" level="ERROR">Error in file '/robot/test/SCRIPTS/RESOURCE/COMMON/RES_UTIL.robot' on line 49: Creating keyword '' failed: Multiple errors:
- User keyword cannot be empty.
- User keyword name cannot be empty.</msg>
<msg timestamp="20231010 21:32:06.404" level="WARN">Any `RPA.*.Application` library works only on Windows platform!</msg>
<msg timestamp="20231010 21:32:06.406" level="WARN">This Excel application library requires Windows dependencies to work.</msg>
<msg timestamp="20231010 21:32:07.242" level="WARN">Imported library '/robot/test/SCRIPTS/RESOURCE/COMMON/LIB/lib_geral.py' contains no keywords.</msg>
</errors>
</robot>

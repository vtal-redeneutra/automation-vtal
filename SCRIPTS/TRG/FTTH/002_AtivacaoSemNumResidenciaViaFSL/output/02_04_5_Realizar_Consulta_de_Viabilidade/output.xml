<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.10 on linux)" generated="20231010 21:32:19.324" rpa="false" schemaversion="4">
<suite id="s1" name="002 AtivacaoSemNumResidenciaViaFSL" source="/robot/test/SCRIPTS/TRG/FTTH/002_AtivacaoSemNumResidenciaViaFSL/002_AtivacaoSemNumResidenciaViaFSL.robot">
<test id="s1-t1" name="02.04-5 - Realizar Consulta de Viabilidade" line="58">
<kw name="Inicia CT" library="DB">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${PORTAL}</var>
<arg>Variable Should Exist</arg>
<arg>${PORTAL}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${PORTAL}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20231010 21:32:22.783" endtime="20231010 21:32:22.783"/>
</kw>
<msg timestamp="20231010 21:32:22.783" level="INFO">${PORTAL} = True</msg>
<status status="PASS" starttime="20231010 21:32:22.782" endtime="20231010 21:32:22.783"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_step}</var>
<arg>Variable Should Exist</arg>
<arg>${STEP}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${STEP}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20231010 21:32:22.784" endtime="20231010 21:32:22.784"/>
</kw>
<msg timestamp="20231010 21:32:22.784" level="INFO">${check_step} = True</msg>
<status status="PASS" starttime="20231010 21:32:22.783" endtime="20231010 21:32:22.784"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PORTAL}</arg>
<arg>${PORTAL}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:22.784" level="INFO">${PORTAL} = True</msg>
<status status="PASS" starttime="20231010 21:32:22.784" endtime="20231010 21:32:22.784"/>
</kw>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Log" library="BuiltIn">
<arg>${CEP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:22.785" level="INFO">00000000</msg>
<status status="PASS" starttime="20231010 21:32:22.785" endtime="20231010 21:32:22.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${NUMERO}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:22.785" level="INFO">00</msg>
<status status="PASS" starttime="20231010 21:32:22.785" endtime="20231010 21:32:22.785"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${check_step}</arg>
<arg>Set Step</arg>
<arg>${STEP}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Step" library="DB">
<arg>${STEP}</arg>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STEP}</arg>
<arg>${STEP}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:22.786" level="INFO">${STEP} = 02_04_5_Realizar_Consulta_de_Viabilidade</msg>
<status status="PASS" starttime="20231010 21:32:22.786" endtime="20231010 21:32:22.787"/>
</kw>
<status status="PASS" starttime="20231010 21:32:22.786" endtime="20231010 21:32:22.787"/>
</kw>
<status status="PASS" starttime="20231010 21:32:22.786" endtime="20231010 21:32:22.787"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPONSAVEL}</arg>
<arg>${RESPONSAVEL}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:22.787" level="INFO">${RESPONSAVEL} = galeite</msg>
<status status="PASS" starttime="20231010 21:32:22.787" endtime="20231010 21:32:22.787"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${AUTHENTICATION}</arg>
<arg>${AUTHENTICATION}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:22.788" level="INFO">${AUTHENTICATION} = Whitelabel</msg>
<status status="PASS" starttime="20231010 21:32:22.787" endtime="20231010 21:32:22.788"/>
</kw>
<kw name="Buscar Dat Do Usuario" library="dat">
<var>${DAT_DB}</var>
<arg>${RESPONSAVEL}</arg>
<arg>${STEP}</arg>
<msg timestamp="20231010 21:32:22.794" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:22.788" endtime="20231010 21:32:22.794"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${DAT_DB}</arg>
<arg>${DAT_DB}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:22.794" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:22.794" endtime="20231010 21:32:22.794"/>
</kw>
<status status="PASS" starttime="20231010 21:32:22.785" endtime="20231010 21:32:22.794"/>
</branch>
<status status="PASS" starttime="20231010 21:32:22.784" endtime="20231010 21:32:22.794"/>
</if>
<status status="PASS" starttime="20231010 21:32:22.781" endtime="20231010 21:32:22.794"/>
</kw>
<kw name="Retornar Token Vtal" library="RES_API">
<doc>Função que usa o usuario e senha para autenticar e receber o valor do Token para fazer as próximas requisições.
| ``HEADERS_TOKEN`` | Informações necessárias para o token, como qual ferramenta está executando. Exemplo:  User-Agent=RobotFramework. |
| ``USUARIO`` | Usuario cadastrado para fazer a autenticação. |
| ``SENHA`` | Senha cadastrado para fazer a autenticação. |
| ``validade_token`` | Variavel com o tempo que expira a validade do token, salva na planilha. |
A resposta é um retorno XML que contem:
- ``access_token`` &lt;str&gt; Cadeia de caracteres que serve de autenticação para requisições.
- ``token_type`` &lt;str&gt; Descrição do tipo de token, pode ser uma cadeia de str ou de int.
- ``expires_in`` &lt;int&gt; Valor em segundos que esse token será valido.
- ``scope`` &lt;str&gt; Escopo do token.
Alguns exemplos de como usar a função:
| Retornar Token Vtal
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#POST%20On%20Session|RequestsLibrary &gt;&gt;]</doc>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${Credencial}</var>
<arg>Credencial</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:32:22.797" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:32:22.796" endtime="20231010 21:32:22.797"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:22.801" level="INFO">${Valor} = Whitelabel</msg>
<status status="PASS" starttime="20231010 21:32:22.798" endtime="20231010 21:32:22.801"/>
</kw>
<status status="PASS" starttime="20231010 21:32:22.795" endtime="20231010 21:32:22.801"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.802" endtime="20231010 21:32:22.802"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.802" endtime="20231010 21:32:22.802"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.803" endtime="20231010 21:32:22.803"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.803" endtime="20231010 21:32:22.804"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.802" endtime="20231010 21:32:22.804"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:22.802" endtime="20231010 21:32:22.804"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.804" endtime="20231010 21:32:22.804"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.804" endtime="20231010 21:32:22.804"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:22.812" endtime="20231010 21:32:22.813"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.801" endtime="20231010 21:32:22.813"/>
</branch>
<status status="PASS" starttime="20231010 21:32:22.795" endtime="20231010 21:32:22.813"/>
</if>
<msg timestamp="20231010 21:32:22.813" level="INFO">${Credencial} = Whitelabel</msg>
<status status="PASS" starttime="20231010 21:32:22.795" endtime="20231010 21:32:22.813"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${TokenExcel}</var>
<arg>Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:32:22.816" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:32:22.814" endtime="20231010 21:32:22.816"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:22.819" level="INFO">${Valor} = </msg>
<status status="PASS" starttime="20231010 21:32:22.816" endtime="20231010 21:32:22.819"/>
</kw>
<status status="PASS" starttime="20231010 21:32:22.814" endtime="20231010 21:32:22.819"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.820" endtime="20231010 21:32:22.820"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.820" endtime="20231010 21:32:22.821"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.821" endtime="20231010 21:32:22.821"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.821" endtime="20231010 21:32:22.821"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.820" endtime="20231010 21:32:22.821"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:22.820" endtime="20231010 21:32:22.821"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.821" endtime="20231010 21:32:22.822"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.822" endtime="20231010 21:32:22.822"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:22.830" endtime="20231010 21:32:22.830"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.820" endtime="20231010 21:32:22.830"/>
</branch>
<status status="PASS" starttime="20231010 21:32:22.813" endtime="20231010 21:32:22.830"/>
</if>
<msg timestamp="20231010 21:32:22.830" level="INFO">${TokenExcel} = </msg>
<status status="PASS" starttime="20231010 21:32:22.813" endtime="20231010 21:32:22.830"/>
</kw>
<if>
<branch type="IF" condition="&quot;${Credencial}&quot; == &quot;Whitelabel&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais Whitelabel foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231010 21:32:22.831" endtime="20231010 21:32:22.831"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyMi1hMTQ0LTNhZGZjZjA2MWY2Mw==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:22.831" level="INFO">${Authorization} = Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyMi1hMTQ0LTNhZGZjZjA2MWY2Mw==</msg>
<status status="PASS" starttime="20231010 21:32:22.831" endtime="20231010 21:32:22.831"/>
</kw>
<status status="PASS" starttime="20231010 21:32:22.830" endtime="20231010 21:32:22.831"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;FTTP&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais FTTP foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.832" endtime="20231010 21:32:22.832"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic MzNkNTc3Y2QtYzZmMS00YzMxLTllYzgtMjRiY2IyZWYyMmI3OjQyNWZkYzUyLTIzMmMtNDQ2YS1iOTViLWQyNmFkZGZmYjBkYw==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.832" endtime="20231010 21:32:22.832"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.832" endtime="20231010 21:32:22.832"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;Bitstream&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais Bitstream foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.832" endtime="20231010 21:32:22.832"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic NDQ0MzdlMjAtMmFjNi00YzY3LTk2NzMtYTMyMDI2N2ZjNmE3OjE1M2ZkYmU4LTcxMzUtNDJiNC05MDQ5LTI4MDM2NmI4MDU2YQ==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.833" endtime="20231010 21:32:22.833"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.832" endtime="20231010 21:32:22.833"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;CPOI&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais CP OI foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.833" endtime="20231010 21:32:22.833"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic Yzg2MzhhNTUtYTdmNC00OTBlLWIyNGItNWZhNjQxMDUwZDQyOmNjZjUyYzc3LTliN2UtNGM2NC04M2NkLTIwZmY3YWQzZjFkZQ==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.834" endtime="20231010 21:32:22.834"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.833" endtime="20231010 21:32:22.834"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;Voip&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais Voip foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.834" endtime="20231010 21:32:22.834"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic Yzg2MzhhNTUtYTdmNC00OTBlLWIyNGItNWZhNjQxMDUwZDQyOmNjZjUyYzc3LTliN2UtNGM2NC04M2NkLTIwZmY3YWQzZjFkZQ==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.834" endtime="20231010 21:32:22.834"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.834" endtime="20231010 21:32:22.834"/>
</branch>
<status status="PASS" starttime="20231010 21:32:22.830" endtime="20231010 21:32:22.834"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${HeaderToken}</var>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
<arg>User-Agent=RobotFramework</arg>
<arg>Accept=*/*</arg>
<arg>Authorization=${Authorization}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231010 21:32:22.835" level="INFO">${HeaderToken} = {'Content-Type': 'application/x-www-form-urlencoded', 'User-Agent': 'RobotFramework', 'Accept': '*/*', 'Authorization': 'Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyM...</msg>
<status status="PASS" starttime="20231010 21:32:22.835" endtime="20231010 21:32:22.835"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${UrlApi}</var>
<arg>URL_Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:32:22.839" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:32:22.836" endtime="20231010 21:32:22.839"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:22.843" level="INFO">${Valor} = https://apitrg.vtal.com.br</msg>
<status status="PASS" starttime="20231010 21:32:22.839" endtime="20231010 21:32:22.843"/>
</kw>
<status status="PASS" starttime="20231010 21:32:22.836" endtime="20231010 21:32:22.843"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.843" endtime="20231010 21:32:22.843"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.844" endtime="20231010 21:32:22.844"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.844" endtime="20231010 21:32:22.844"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.844" endtime="20231010 21:32:22.844"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.844" endtime="20231010 21:32:22.844"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:22.843" endtime="20231010 21:32:22.844"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.845" endtime="20231010 21:32:22.845"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.845" endtime="20231010 21:32:22.845"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:22.853" endtime="20231010 21:32:22.853"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.843" endtime="20231010 21:32:22.853"/>
</branch>
<status status="PASS" starttime="20231010 21:32:22.835" endtime="20231010 21:32:22.853"/>
</if>
<msg timestamp="20231010 21:32:22.853" level="INFO">${UrlApi} = https://apitrg.vtal.com.br</msg>
<status status="PASS" starttime="20231010 21:32:22.835" endtime="20231010 21:32:22.853"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${Usuario}</var>
<arg>Usuario_Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:32:22.857" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:32:22.854" endtime="20231010 21:32:22.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:22.861" level="INFO">${Valor} = d6c3e319-d388-4128-96f8-154da4c71526</msg>
<status status="PASS" starttime="20231010 21:32:22.857" endtime="20231010 21:32:22.861"/>
</kw>
<status status="PASS" starttime="20231010 21:32:22.854" endtime="20231010 21:32:22.861"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.861" endtime="20231010 21:32:22.861"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.862" endtime="20231010 21:32:22.862"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.862" endtime="20231010 21:32:22.862"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.863" endtime="20231010 21:32:22.863"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.862" endtime="20231010 21:32:22.863"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:22.862" endtime="20231010 21:32:22.863"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.863" endtime="20231010 21:32:22.863"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.863" endtime="20231010 21:32:22.863"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:22.871" endtime="20231010 21:32:22.871"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.861" endtime="20231010 21:32:22.871"/>
</branch>
<status status="PASS" starttime="20231010 21:32:22.854" endtime="20231010 21:32:22.871"/>
</if>
<msg timestamp="20231010 21:32:22.871" level="INFO">${Usuario} = d6c3e319-d388-4128-96f8-154da4c71526</msg>
<status status="PASS" starttime="20231010 21:32:22.853" endtime="20231010 21:32:22.871"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${Senha}</var>
<arg>Senha_Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:32:22.874" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:32:22.873" endtime="20231010 21:32:22.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:22.878" level="INFO">${Valor} = 0917ff46-9ed9-4dea-babd-baba3e2a55e3</msg>
<status status="PASS" starttime="20231010 21:32:22.875" endtime="20231010 21:32:22.878"/>
</kw>
<status status="PASS" starttime="20231010 21:32:22.872" endtime="20231010 21:32:22.878"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.879" endtime="20231010 21:32:22.879"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.879" endtime="20231010 21:32:22.879"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.879" endtime="20231010 21:32:22.879"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.880" endtime="20231010 21:32:22.880"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.879" endtime="20231010 21:32:22.880"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:22.879" endtime="20231010 21:32:22.880"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.880" endtime="20231010 21:32:22.880"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:22.880" endtime="20231010 21:32:22.880"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:22.888" endtime="20231010 21:32:22.888"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:22.878" endtime="20231010 21:32:22.888"/>
</branch>
<status status="PASS" starttime="20231010 21:32:22.872" endtime="20231010 21:32:22.888"/>
</if>
<msg timestamp="20231010 21:32:22.888" level="INFO">${Senha} = 0917ff46-9ed9-4dea-babd-baba3e2a55e3</msg>
<status status="PASS" starttime="20231010 21:32:22.872" endtime="20231010 21:32:22.888"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${UrlApi}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231010 21:32:22.889" level="INFO">${UrlApi} = https://apitrg.vtal.com.br</msg>
<status status="PASS" starttime="20231010 21:32:22.889" endtime="20231010 21:32:22.889"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${Usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231010 21:32:22.890" level="INFO">${Usuario} = d6c3e319-d388-4128-96f8-154da4c71526</msg>
<status status="PASS" starttime="20231010 21:32:22.890" endtime="20231010 21:32:22.890"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${Senha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231010 21:32:22.890" level="INFO">${Senha} = 0917ff46-9ed9-4dea-babd-baba3e2a55e3</msg>
<status status="PASS" starttime="20231010 21:32:22.890" endtime="20231010 21:32:22.890"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>StartAPI</arg>
<arg>${UrlApi}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231010 21:32:22.891" level="INFO">Creating Session using : alias=StartAPI, url=https://apitrg.vtal.com.br, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20231010 21:32:22.890" endtime="20231010 21:32:22.891"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>StartAPI</arg>
<arg>${AUTH}</arg>
<arg>data={"username":"${Usuario}","password":"${Senha}"}</arg>
<arg>headers=${HeaderToken}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20231010 21:32:24.097" level="INFO">POST Request : url=https://apitrg.vtal.com.br/auth/oauth/v2/token?grant_type=client_credentials&amp;scope=fttx 
 path_url=/auth/oauth/v2/token?grant_type=client_credentials&amp;scope=fttx 
 headers={'User-Agent': 'RobotFramework', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyMi1hMTQ0LTNhZGZjZjA2MWY2Mw==', 'Content-Length': '101'} 
 body={"username":"d6c3e319-d388-4128-96f8-154da4c71526","password":"0917ff46-9ed9-4dea-babd-baba3e2a55e3"} 
 </msg>
<msg timestamp="20231010 21:32:24.097" level="INFO">POST Response : url=https://apitrg.vtal.com.br/auth/oauth/v2/token?grant_type=client_credentials&amp;scope=fttx 
 status=200, reason=OK 
 headers={'Pragma': 'no-cache', 'Cache-Control': 'no-store', 'Content-Encoding': 'gzip', 'Content-Type': 'application/json;charset=UTF-8', 'Content-Length': '127', 'Date': 'Tue, 10 Oct 2023 21:32:25 GMT', 'Server': 'Layer7-API-Gateway', 'Set-Cookie': 'BIGipServerRD16_POOL_APIGQX02LB_8443=rd16o00000000000000000000ffffac128416o8443; path=/; Httponly; Secure'} 
 body={
  "access_token":"745da30c-9f05-4410-a662-8de9b0ec61e5",
  "token_type":"Bearer",
  "expires_in":3600,
  "scope":"fttx"
} 
 </msg>
<msg timestamp="20231010 21:32:24.098" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231010 21:32:22.891" endtime="20231010 21:32:24.098"/>
</kw>
<kw name="Valida Retorno da API" library="RES_API">
<arg>${Response.status_code}</arg>
<arg>200</arg>
<arg>Retornar Token Vtal</arg>
<doc>Função usada para mandar validar o retorno da API, caso um retorno 500 seja dado muitas vezes ou  um retorno diferente do esperado ele cria um documento de defect.
| =Arguments= | =Description= |
| ``STATUS_RECEBIDO`` | Recebe o status de Retorno da API. exemplo: ``404(Not Found)``. |
| ``STATUS_ESPERADO`` | Recebe o status Esperado da API. exemplo: ``200(Ok)``. |
| ``FUNCAO_API`` | Recebe o nome da função para que ela execute novamente caso seja diferente o resultado: exemplo: ``Retornar Address Id``. |
A resposta é um retorno JSON que contem:
- ``type`` &lt;int&gt; Tipo da resposta do Retorno. Exemplo: S(Sucesso) e E(ERRO).
- ``code`` &lt;int&gt; Codigo da reposta do retorno. Exemplo: 200(Ok) 404(Not Found).
- ``message`` &lt;str&gt; Descrição do código de retorno. Exemplo: 200(Ok) 404(Not Found).
Alguns exemplos de como usar a função:
| Valida Retorno da API                   200                 200                                     Retornar Address Id
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#PATCH|RequestsLibrary &gt;&gt;]</doc>
<if>
<branch type="IF" condition="'${status_recebido}' == '500'">
<kw name="Evaluate" library="BuiltIn">
<var>${Counter_API}</var>
<arg>${Counter_API} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.107" endtime="20231010 21:32:24.107"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Counter_API}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.107" endtime="20231010 21:32:24.107"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>\nErro ${status_recebido} recebido, tentando novamente!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.107" endtime="20231010 21:32:24.107"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.107" endtime="20231010 21:32:24.107"/>
</kw>
<if>
<branch type="IF" condition="&quot;${Counter_API}&quot; == &quot;3&quot;">
<kw name="Fatal Error" library="BuiltIn">
<arg>\nApós 3 execuções a API continua retornando erro ${status_esperado}</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.108" endtime="20231010 21:32:24.108"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.108" endtime="20231010 21:32:24.108"/>
</branch>
<status status="NOT RUN" starttime="20231010 21:32:24.107" endtime="20231010 21:32:24.108"/>
</if>
<kw name="Run Keyword" library="BuiltIn">
<arg>${Funcao_API}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.108" endtime="20231010 21:32:24.108"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.106" endtime="20231010 21:32:24.108"/>
</branch>
<branch type="ELSE IF" condition="'${status_recebido}' != '${status_esperado}'">
<kw name="Fatal Error" library="BuiltIn">
<arg>\n Retorno da API diferente do esperado ${status_recebido} != ${status_esperado}</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.108" endtime="20231010 21:32:24.109"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.108" endtime="20231010 21:32:24.109"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.106" endtime="20231010 21:32:24.109"/>
</if>
<status status="PASS" starttime="20231010 21:32:24.102" endtime="20231010 21:32:24.109"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${Token}</var>
<arg>${Response.json()}</arg>
<arg>access_token</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20231010 21:32:24.112" level="INFO">${Token} = 745da30c-9f05-4410-a662-8de9b0ec61e5</msg>
<status status="PASS" starttime="20231010 21:32:24.109" endtime="20231010 21:32:24.112"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:24.113" level="INFO">${Token} = 745da30c-9f05-4410-a662-8de9b0ec61e5</msg>
<status status="PASS" starttime="20231010 21:32:24.113" endtime="20231010 21:32:24.113"/>
</kw>
<status status="PASS" starttime="20231010 21:32:22.795" endtime="20231010 21:32:24.113"/>
</kw>
<kw name="Retorna Viabilidade dos Produtos" library="ROB0002_ConsultarViabilidade">
<tag>ConsultaLogradouro</tag>
<doc>Keyword encadeador TRG</doc>
<kw name="Retorna Viabilidade Produtos" library="ROB0002_ConsultarViabilidade">
<doc>Função usada para iniciar a API, permitindo assim fazer as outras requests via POST com o objetivo de retornar a
viabilidade técnica confirmada através do Address ID sem complemento.
| ``URL_API`` | A URL base para a criação das requisições. Exemplo: ``https://apitrg.vtal.com.br/api/resourcePoolManagement/v2/availabilityCheck``. |</doc>
<kw name="Ler Variavel na Planilha" library="RES_EXCEL">
<var>${ADDRESS_ID}</var>
<arg>addressId</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${DAT_DB}' != '${EMPTY}'">
<kw name="Buscar Campo Dat Id" library="dat">
<var>${Query}</var>
<arg>${DAT_DB}</arg>
<msg timestamp="20231010 21:32:24.119" level="INFO">32</msg>
<msg timestamp="20231010 21:32:24.119" level="INFO">${Query} = 32</msg>
<status status="PASS" starttime="20231010 21:32:24.117" endtime="20231010 21:32:24.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Query}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:24.120" level="INFO">32</msg>
<status status="PASS" starttime="20231010 21:32:24.120" endtime="20231010 21:32:24.120"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Query.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:24.124" level="INFO">${Valor} = 200454</msg>
<status status="PASS" starttime="20231010 21:32:24.120" endtime="20231010 21:32:24.125"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.114" endtime="20231010 21:32:24.125"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.114" endtime="20231010 21:32:24.125"/>
</if>
<if>
<branch type="IF" condition="'${Valor}' == '${EMPTY}'">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.128" endtime="20231010 21:32:24.128"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.125" endtime="20231010 21:32:24.128"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.125" endtime="20231010 21:32:24.128"/>
</if>
<status status="PASS" starttime="20231010 21:32:24.114" endtime="20231010 21:32:24.128"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.129" endtime="20231010 21:32:24.129"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.130" endtime="20231010 21:32:24.130"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.130" endtime="20231010 21:32:24.130"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.130" endtime="20231010 21:32:24.130"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.129" endtime="20231010 21:32:24.130"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:24.129" endtime="20231010 21:32:24.130"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.130" endtime="20231010 21:32:24.131"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.131" endtime="20231010 21:32:24.131"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:24.138" endtime="20231010 21:32:24.139"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.128" endtime="20231010 21:32:24.139"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.114" endtime="20231010 21:32:24.139"/>
</if>
<msg timestamp="20231010 21:32:24.139" level="INFO">${ADDRESS_ID} = 200454</msg>
<status status="PASS" starttime="20231010 21:32:24.114" endtime="20231010 21:32:24.139"/>
</kw>
<kw name="Ler Variavel na Planilha" library="RES_EXCEL">
<var>${type1}</var>
<arg>typeComplement1</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${DAT_DB}' != '${EMPTY}'">
<kw name="Buscar Campo Dat Id" library="dat">
<var>${Query}</var>
<arg>${DAT_DB}</arg>
<msg timestamp="20231010 21:32:24.145" level="INFO">32</msg>
<msg timestamp="20231010 21:32:24.145" level="INFO">${Query} = 32</msg>
<status status="PASS" starttime="20231010 21:32:24.143" endtime="20231010 21:32:24.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Query}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:24.146" level="INFO">32</msg>
<status status="PASS" starttime="20231010 21:32:24.146" endtime="20231010 21:32:24.146"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Query.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:24.149" level="INFO">${Valor} = </msg>
<status status="PASS" starttime="20231010 21:32:24.146" endtime="20231010 21:32:24.149"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.140" endtime="20231010 21:32:24.150"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.140" endtime="20231010 21:32:24.150"/>
</if>
<if>
<branch type="IF" condition="'${Valor}' == '${EMPTY}'">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:24.153" level="INFO">${Valor} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.153" endtime="20231010 21:32:24.153"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.150" endtime="20231010 21:32:24.153"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.150" endtime="20231010 21:32:24.154"/>
</if>
<status status="PASS" starttime="20231010 21:32:24.140" endtime="20231010 21:32:24.154"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.154" endtime="20231010 21:32:24.154"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.155" endtime="20231010 21:32:24.155"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.155" endtime="20231010 21:32:24.155"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.156" endtime="20231010 21:32:24.156"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.155" endtime="20231010 21:32:24.156"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:24.154" endtime="20231010 21:32:24.156"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.156" endtime="20231010 21:32:24.156"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.156" endtime="20231010 21:32:24.156"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:24.164" endtime="20231010 21:32:24.164"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.154" endtime="20231010 21:32:24.164"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.140" endtime="20231010 21:32:24.164"/>
</if>
<msg timestamp="20231010 21:32:24.164" level="INFO">${type1} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.140" endtime="20231010 21:32:24.164"/>
</kw>
<kw name="Ler Variavel na Planilha" library="RES_EXCEL">
<var>${type2}</var>
<arg>typeComplement2</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${DAT_DB}' != '${EMPTY}'">
<kw name="Buscar Campo Dat Id" library="dat">
<var>${Query}</var>
<arg>${DAT_DB}</arg>
<msg timestamp="20231010 21:32:24.170" level="INFO">32</msg>
<msg timestamp="20231010 21:32:24.170" level="INFO">${Query} = 32</msg>
<status status="PASS" starttime="20231010 21:32:24.168" endtime="20231010 21:32:24.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Query}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:24.172" level="INFO">32</msg>
<status status="PASS" starttime="20231010 21:32:24.171" endtime="20231010 21:32:24.172"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Query.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:24.176" level="INFO">${Valor} = </msg>
<status status="PASS" starttime="20231010 21:32:24.172" endtime="20231010 21:32:24.176"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.165" endtime="20231010 21:32:24.176"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.165" endtime="20231010 21:32:24.176"/>
</if>
<if>
<branch type="IF" condition="'${Valor}' == '${EMPTY}'">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:24.180" level="INFO">${Valor} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.180" endtime="20231010 21:32:24.180"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.176" endtime="20231010 21:32:24.180"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.176" endtime="20231010 21:32:24.180"/>
</if>
<status status="PASS" starttime="20231010 21:32:24.165" endtime="20231010 21:32:24.180"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.180" endtime="20231010 21:32:24.181"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.181" endtime="20231010 21:32:24.181"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.181" endtime="20231010 21:32:24.181"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.181" endtime="20231010 21:32:24.181"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.181" endtime="20231010 21:32:24.181"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:24.181" endtime="20231010 21:32:24.181"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.182" endtime="20231010 21:32:24.182"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.182" endtime="20231010 21:32:24.182"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:24.190" endtime="20231010 21:32:24.190"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.180" endtime="20231010 21:32:24.190"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.165" endtime="20231010 21:32:24.190"/>
</if>
<msg timestamp="20231010 21:32:24.191" level="INFO">${type2} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.164" endtime="20231010 21:32:24.191"/>
</kw>
<kw name="Ler Variavel na Planilha" library="RES_EXCEL">
<var>${type3}</var>
<arg>typeComplement3</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${DAT_DB}' != '${EMPTY}'">
<kw name="Buscar Campo Dat Id" library="dat">
<var>${Query}</var>
<arg>${DAT_DB}</arg>
<msg timestamp="20231010 21:32:24.197" level="INFO">32</msg>
<msg timestamp="20231010 21:32:24.197" level="INFO">${Query} = 32</msg>
<status status="PASS" starttime="20231010 21:32:24.194" endtime="20231010 21:32:24.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Query}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:24.197" level="INFO">32</msg>
<status status="PASS" starttime="20231010 21:32:24.197" endtime="20231010 21:32:24.197"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Query.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:24.201" level="INFO">${Valor} = </msg>
<status status="PASS" starttime="20231010 21:32:24.198" endtime="20231010 21:32:24.201"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.191" endtime="20231010 21:32:24.201"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.191" endtime="20231010 21:32:24.201"/>
</if>
<if>
<branch type="IF" condition="'${Valor}' == '${EMPTY}'">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:24.206" level="INFO">${Valor} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.206" endtime="20231010 21:32:24.206"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.202" endtime="20231010 21:32:24.206"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.201" endtime="20231010 21:32:24.206"/>
</if>
<status status="PASS" starttime="20231010 21:32:24.191" endtime="20231010 21:32:24.206"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.207" endtime="20231010 21:32:24.207"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.207" endtime="20231010 21:32:24.207"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.207" endtime="20231010 21:32:24.208"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.208" endtime="20231010 21:32:24.208"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.207" endtime="20231010 21:32:24.208"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:24.207" endtime="20231010 21:32:24.208"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.208" endtime="20231010 21:32:24.209"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.209" endtime="20231010 21:32:24.209"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:24.216" endtime="20231010 21:32:24.216"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.206" endtime="20231010 21:32:24.216"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.191" endtime="20231010 21:32:24.216"/>
</if>
<msg timestamp="20231010 21:32:24.216" level="INFO">${type3} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.191" endtime="20231010 21:32:24.216"/>
</kw>
<kw name="Ler Variavel na Planilha" library="RES_EXCEL">
<var>${value1}</var>
<arg>value1</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${DAT_DB}' != '${EMPTY}'">
<kw name="Buscar Campo Dat Id" library="dat">
<var>${Query}</var>
<arg>${DAT_DB}</arg>
<msg timestamp="20231010 21:32:24.224" level="INFO">32</msg>
<msg timestamp="20231010 21:32:24.224" level="INFO">${Query} = 32</msg>
<status status="PASS" starttime="20231010 21:32:24.221" endtime="20231010 21:32:24.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Query}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:24.225" level="INFO">32</msg>
<status status="PASS" starttime="20231010 21:32:24.224" endtime="20231010 21:32:24.225"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Query.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:24.228" level="INFO">${Valor} = </msg>
<status status="PASS" starttime="20231010 21:32:24.225" endtime="20231010 21:32:24.229"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.217" endtime="20231010 21:32:24.229"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.217" endtime="20231010 21:32:24.229"/>
</if>
<if>
<branch type="IF" condition="'${Valor}' == '${EMPTY}'">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:24.232" level="INFO">${Valor} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.232" endtime="20231010 21:32:24.232"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.229" endtime="20231010 21:32:24.232"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.229" endtime="20231010 21:32:24.232"/>
</if>
<status status="PASS" starttime="20231010 21:32:24.217" endtime="20231010 21:32:24.232"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.233" endtime="20231010 21:32:24.233"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.233" endtime="20231010 21:32:24.233"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.234" endtime="20231010 21:32:24.234"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.234" endtime="20231010 21:32:24.234"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.233" endtime="20231010 21:32:24.234"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:24.233" endtime="20231010 21:32:24.234"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.234" endtime="20231010 21:32:24.234"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.234" endtime="20231010 21:32:24.234"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:24.243" endtime="20231010 21:32:24.243"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.232" endtime="20231010 21:32:24.243"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.217" endtime="20231010 21:32:24.243"/>
</if>
<msg timestamp="20231010 21:32:24.243" level="INFO">${value1} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.216" endtime="20231010 21:32:24.243"/>
</kw>
<kw name="Ler Variavel na Planilha" library="RES_EXCEL">
<var>${value2}</var>
<arg>value2</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${DAT_DB}' != '${EMPTY}'">
<kw name="Buscar Campo Dat Id" library="dat">
<var>${Query}</var>
<arg>${DAT_DB}</arg>
<msg timestamp="20231010 21:32:24.249" level="INFO">32</msg>
<msg timestamp="20231010 21:32:24.249" level="INFO">${Query} = 32</msg>
<status status="PASS" starttime="20231010 21:32:24.247" endtime="20231010 21:32:24.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Query}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:24.250" level="INFO">32</msg>
<status status="PASS" starttime="20231010 21:32:24.250" endtime="20231010 21:32:24.250"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Query.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:24.253" level="INFO">${Valor} = </msg>
<status status="PASS" starttime="20231010 21:32:24.250" endtime="20231010 21:32:24.253"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.244" endtime="20231010 21:32:24.254"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.244" endtime="20231010 21:32:24.254"/>
</if>
<if>
<branch type="IF" condition="'${Valor}' == '${EMPTY}'">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:24.258" level="INFO">${Valor} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.257" endtime="20231010 21:32:24.258"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.254" endtime="20231010 21:32:24.258"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.254" endtime="20231010 21:32:24.258"/>
</if>
<status status="PASS" starttime="20231010 21:32:24.244" endtime="20231010 21:32:24.258"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.258" endtime="20231010 21:32:24.258"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.259" endtime="20231010 21:32:24.259"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.259" endtime="20231010 21:32:24.260"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.260" endtime="20231010 21:32:24.260"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.259" endtime="20231010 21:32:24.260"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:24.259" endtime="20231010 21:32:24.260"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.260" endtime="20231010 21:32:24.260"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.260" endtime="20231010 21:32:24.260"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:24.268" endtime="20231010 21:32:24.268"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.258" endtime="20231010 21:32:24.268"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.244" endtime="20231010 21:32:24.268"/>
</if>
<msg timestamp="20231010 21:32:24.268" level="INFO">${value2} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.243" endtime="20231010 21:32:24.268"/>
</kw>
<kw name="Ler Variavel na Planilha" library="RES_EXCEL">
<var>${value3}</var>
<arg>value3</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${DAT_DB}' != '${EMPTY}'">
<kw name="Buscar Campo Dat Id" library="dat">
<var>${Query}</var>
<arg>${DAT_DB}</arg>
<msg timestamp="20231010 21:32:24.275" level="INFO">32</msg>
<msg timestamp="20231010 21:32:24.275" level="INFO">${Query} = 32</msg>
<status status="PASS" starttime="20231010 21:32:24.273" endtime="20231010 21:32:24.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${Query}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:24.276" level="INFO">32</msg>
<status status="PASS" starttime="20231010 21:32:24.275" endtime="20231010 21:32:24.276"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Query.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:32:24.281" level="INFO">${Valor} = </msg>
<status status="PASS" starttime="20231010 21:32:24.276" endtime="20231010 21:32:24.281"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.269" endtime="20231010 21:32:24.281"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.269" endtime="20231010 21:32:24.281"/>
</if>
<if>
<branch type="IF" condition="'${Valor}' == '${EMPTY}'">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:24.285" level="INFO">${Valor} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.285" endtime="20231010 21:32:24.285"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.281" endtime="20231010 21:32:24.285"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.281" endtime="20231010 21:32:24.285"/>
</if>
<status status="PASS" starttime="20231010 21:32:24.269" endtime="20231010 21:32:24.285"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.286" endtime="20231010 21:32:24.286"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.286" endtime="20231010 21:32:24.286"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.286" endtime="20231010 21:32:24.286"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.287" endtime="20231010 21:32:24.287"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.286" endtime="20231010 21:32:24.287"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:24.286" endtime="20231010 21:32:24.287"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.287" endtime="20231010 21:32:24.287"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.287" endtime="20231010 21:32:24.288"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:24.295" endtime="20231010 21:32:24.295"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.285" endtime="20231010 21:32:24.295"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.269" endtime="20231010 21:32:24.295"/>
</if>
<msg timestamp="20231010 21:32:24.295" level="INFO">${value3} = None</msg>
<status status="PASS" starttime="20231010 21:32:24.268" endtime="20231010 21:32:24.295"/>
</kw>
<if>
<branch type="IF" condition="&quot;${type1}&quot; != &quot;None&quot; or &quot;${type2}&quot; != &quot;None&quot; or &quot;${type3}&quot; != &quot;None&quot;">
<kw name="Convert To Integer" library="BuiltIn">
<var>${qntdComp}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.296" endtime="20231010 21:32:24.296"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${add1}</var>
<arg>1</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.296" endtime="20231010 21:32:24.296"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{listTypes}</var>
<arg>${type1}</arg>
<arg>${type2}</arg>
<arg>${type3}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.296" endtime="20231010 21:32:24.297"/>
</kw>
<for flavor="IN">
<var>${element}</var>
<value>@{listTypes}</value>
<iter>
<var name="${element}"/>
<if>
<branch type="IF" condition="&quot;${element}&quot; != &quot;None&quot;">
<kw name="Evaluate" library="BuiltIn">
<var>${qntdComp}</var>
<arg>${qntdComp}+${add1}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.297" endtime="20231010 21:32:24.298"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.297" endtime="20231010 21:32:24.298"/>
</branch>
<status status="NOT RUN" starttime="20231010 21:32:24.297" endtime="20231010 21:32:24.298"/>
</if>
<status status="NOT RUN" starttime="20231010 21:32:24.297" endtime="20231010 21:32:24.298"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:24.297" endtime="20231010 21:32:24.298"/>
</for>
<if>
<branch type="IF" condition="${qntdComp} == 1">
<kw name="POST_API" library="RES_API">
<var>${Response}</var>
<arg>${API_BASERESOURCEPOOL_V2}/availabilityCheck</arg>
<arg>"address":{"id": "${ADDRESS_ID}","complement":{"complements":[{"type":"${type1}","value":"${value1}"}]}}</arg>
<doc>Função usada para mandar um POST request para a API.
| =Arguments= | =Description= |
| ``REQUEST_URL`` | A URL requisitada para a requisição. exemplo: ``/api/foo``. |
| ``REQUEST_DATA`` | A informação que será enviada pela requisição. |
A resposta é um retorno JSON que contem:
- ``type`` &lt;int&gt; Tipo da resposta do Retorno. Exemplo: S(Sucesso) e E(ERRO).
- ``code`` &lt;int&gt; Codigo da reposta do retorno. Exemplo: 200(Ok) 404(Not Found).
- ``message`` &lt;str&gt; Descrição do código de retorno. Exemplo: 200(Ok) 404(Not Found).
Alguns exemplos de como usar a função:
| ${RESPONSE}=                          POST_API                                https://apitrg.vtal.com.br/api/resourcePoolManagement/v2/availabilityCheck                                    "address":{"id": "200454"}
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#POST%20On%20Session|RequestsLibrary &gt;&gt;]</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.305" endtime="20231010 21:32:24.305"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.305" endtime="20231010 21:32:24.305"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.298" endtime="20231010 21:32:24.305"/>
</branch>
<status status="NOT RUN" starttime="20231010 21:32:24.298" endtime="20231010 21:32:24.305"/>
</if>
<if>
<branch type="IF" condition="${qntdComp} == 2">
<kw name="POST_API" library="RES_API">
<var>${Response}</var>
<arg>${API_BASERESOURCEPOOL_V2}/availabilityCheck</arg>
<arg>"address":{"id": "${ADDRESS_ID}","complement":{"complements":[{"type":"${type1}","value":"${value1}"},{"type":"${type2}","value":"${value2}"}]}}</arg>
<doc>Função usada para mandar um POST request para a API.
| =Arguments= | =Description= |
| ``REQUEST_URL`` | A URL requisitada para a requisição. exemplo: ``/api/foo``. |
| ``REQUEST_DATA`` | A informação que será enviada pela requisição. |
A resposta é um retorno JSON que contem:
- ``type`` &lt;int&gt; Tipo da resposta do Retorno. Exemplo: S(Sucesso) e E(ERRO).
- ``code`` &lt;int&gt; Codigo da reposta do retorno. Exemplo: 200(Ok) 404(Not Found).
- ``message`` &lt;str&gt; Descrição do código de retorno. Exemplo: 200(Ok) 404(Not Found).
Alguns exemplos de como usar a função:
| ${RESPONSE}=                          POST_API                                https://apitrg.vtal.com.br/api/resourcePoolManagement/v2/availabilityCheck                                    "address":{"id": "200454"}
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#POST%20On%20Session|RequestsLibrary &gt;&gt;]</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.312" endtime="20231010 21:32:24.312"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.312" endtime="20231010 21:32:24.312"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.305" endtime="20231010 21:32:24.312"/>
</branch>
<status status="NOT RUN" starttime="20231010 21:32:24.305" endtime="20231010 21:32:24.312"/>
</if>
<if>
<branch type="IF" condition="${qntdComp} == 3">
<kw name="POST_API" library="RES_API">
<var>${Response}</var>
<arg>${API_BASERESOURCEPOOL_V2}/availabilityCheck</arg>
<arg>"address":{"id": "${ADDRESS_ID}","complement":{"complements":[{"type":"${type1}","value":"${value1}"},{"type":"${type2}","value":"${value2}"},{"type":"${type3}","value":"${value3}"}]}}</arg>
<doc>Função usada para mandar um POST request para a API.
| =Arguments= | =Description= |
| ``REQUEST_URL`` | A URL requisitada para a requisição. exemplo: ``/api/foo``. |
| ``REQUEST_DATA`` | A informação que será enviada pela requisição. |
A resposta é um retorno JSON que contem:
- ``type`` &lt;int&gt; Tipo da resposta do Retorno. Exemplo: S(Sucesso) e E(ERRO).
- ``code`` &lt;int&gt; Codigo da reposta do retorno. Exemplo: 200(Ok) 404(Not Found).
- ``message`` &lt;str&gt; Descrição do código de retorno. Exemplo: 200(Ok) 404(Not Found).
Alguns exemplos de como usar a função:
| ${RESPONSE}=                          POST_API                                https://apitrg.vtal.com.br/api/resourcePoolManagement/v2/availabilityCheck                                    "address":{"id": "200454"}
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#POST%20On%20Session|RequestsLibrary &gt;&gt;]</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.318" endtime="20231010 21:32:24.318"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:24.319" endtime="20231010 21:32:24.319"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:24.313" endtime="20231010 21:32:24.319"/>
</branch>
<status status="NOT RUN" starttime="20231010 21:32:24.313" endtime="20231010 21:32:24.319"/>
</if>
<status status="NOT RUN" starttime="20231010 21:32:24.295" endtime="20231010 21:32:24.319"/>
</branch>
<branch type="ELSE">
<kw name="POST_API" library="RES_API">
<var>${Response}</var>
<arg>${API_BASERESOURCEPOOL_V2}/availabilityCheck</arg>
<arg>"address":{"id": "${ADDRESS_ID}"}</arg>
<doc>Função usada para mandar um POST request para a API.
| =Arguments= | =Description= |
| ``REQUEST_URL`` | A URL requisitada para a requisição. exemplo: ``/api/foo``. |
| ``REQUEST_DATA`` | A informação que será enviada pela requisição. |
A resposta é um retorno JSON que contem:
- ``type`` &lt;int&gt; Tipo da resposta do Retorno. Exemplo: S(Sucesso) e E(ERRO).
- ``code`` &lt;int&gt; Codigo da reposta do retorno. Exemplo: 200(Ok) 404(Not Found).
- ``message`` &lt;str&gt; Descrição do código de retorno. Exemplo: 200(Ok) 404(Not Found).
Alguns exemplos de como usar a função:
| ${RESPONSE}=                          POST_API                                https://apitrg.vtal.com.br/api/resourcePoolManagement/v2/availabilityCheck                                    "address":{"id": "200454"}
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#POST%20On%20Session|RequestsLibrary &gt;&gt;]</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>StartAPI</arg>
<arg>${URL_API}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231010 21:32:24.326" level="INFO">Creating Session using : alias=StartAPI, url=https://apitrg.vtal.com.br, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20231010 21:32:24.326" endtime="20231010 21:32:24.327"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${HEADERS}</var>
<arg>Content-Type=${CONTENT_TYPE}</arg>
<arg>User-Agent=RobotFramework</arg>
<arg>Accept=*/*</arg>
<arg>Authorization=Bearer ${TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231010 21:32:24.328" level="INFO">${HEADERS} = {'Content-Type': 'application/json; charset=iso-8859-1', 'User-Agent': 'RobotFramework', 'Accept': '*/*', 'Authorization': 'Bearer 745da30c-9f05-4410-a662-8de9b0ec61e5'}</msg>
<status status="PASS" starttime="20231010 21:32:24.327" endtime="20231010 21:32:24.328"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>StartAPI</arg>
<arg>${REQUEST_URL}</arg>
<arg>data={${REQUEST_DATA}}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20231010 21:32:28.510" level="INFO">POST Request : url=https://apitrg.vtal.com.br/api/resourcePoolManagement/v2/availabilityCheck 
 path_url=/api/resourcePoolManagement/v2/availabilityCheck 
 headers={'User-Agent': 'RobotFramework', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json; charset=iso-8859-1', 'Authorization': 'Bearer 745da30c-9f05-4410-a662-8de9b0ec61e5', 'Content-Length': '28'} 
 body={"address":{"id": "200454"}} 
 </msg>
<msg timestamp="20231010 21:32:28.510" level="INFO">POST Response : url=https://apitrg.vtal.com.br/api/resourcePoolManagement/v2/availabilityCheck 
 status=200, reason=OK 
 headers={'X-ORACLE-DMS-ECID': 'e843af0f-436f-4520-b9d6-96b531848bd7-004998ce', 'X-ORACLE-DMS-RID': '0', 'Set-Cookie': 'BIGipServerRD26_POOL_BSOAQX02LB_80=rd26o00000000000000000000ffff0a65204ao80; Path=/api/resourcePoolManagement/v2; Httponly; Domain=apitrg.vtal.com.br, BIGipServerRD16_POOL_APIGQX02LB_8443=rd16o00000000000000000000ffffac128416o8443; path=/; Httponly; Secure', 'Content-Encoding': 'gzip', 'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '300', 'Date': 'Tue, 10 Oct 2023 21:32:30 GMT', 'Server': 'Layer7-API-Gateway'} 
 body={
  "control" : {
    "type" : "S",
    "code" : "200",
    "message" : "Ok"
  },
  "resource" : {
    "inventoryId" : 21136833,
    "maxBandwidth" : "2000",
    "availabilityType" : 1,
    "availabilityCode" : 0,
    "availabilityDescription" : "Viável – Viabilidade técnica confirmada",
    "products" : {
      "product" : [ {
        "type" : "Banda Larga",
        "catalogId" : "BL_400MB",
        "name" : "VELOC_400MBPS",
        "technology" : ""
      }, {
        "type" : "Banda Larga",
        "catalogId" : "BL_1000MB",
        "name" : "VELOC_1000MBPS",
        "technology" : ""
      } ]
    }
  }
} 
 </msg>
<msg timestamp="20231010 21:32:28.510" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231010 21:32:24.328" endtime="20231010 21:32:28.510"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:28.511" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231010 21:32:28.511" endtime="20231010 21:32:28.511"/>
</kw>
<msg timestamp="20231010 21:32:28.515" level="INFO">${Response} = {'control': {'type': 'S', 'code': '200', 'message': 'Ok'}, 'resource': {'inventoryId': 21136833, 'maxBandwidth': '2000', 'availabilityType': 1, 'availabilityCode': 0, 'availabilityDescription': 'Viáve...</msg>
<status status="PASS" starttime="20231010 21:32:24.326" endtime="20231010 21:32:28.515"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:28.515" level="INFO">${Response} = {'control': {'type': 'S', 'code': '200', 'message': 'Ok'}, 'resource': {'inventoryId': 21136833, 'maxBandwidth': '2000', 'availabilityType': 1, 'availabilityCode': 0, 'availabilityDescription': 'Viáve...</msg>
<status status="PASS" starttime="20231010 21:32:28.515" endtime="20231010 21:32:28.515"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.319" endtime="20231010 21:32:28.516"/>
</branch>
<status status="PASS" starttime="20231010 21:32:24.295" endtime="20231010 21:32:28.516"/>
</if>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${Response_Code}</var>
<arg>${Response}</arg>
<arg>$.control.code</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:28.566" level="INFO">${Response_Code} = ['200']</msg>
<status status="PASS" starttime="20231010 21:32:28.516" endtime="20231010 21:32:28.566"/>
</kw>
<kw name="Valida Retorno da API" library="RES_API">
<arg>${Response_Code[0]}</arg>
<arg>200</arg>
<arg>Retorna Viabilidade Produtos</arg>
<doc>Função usada para mandar validar o retorno da API, caso um retorno 500 seja dado muitas vezes ou  um retorno diferente do esperado ele cria um documento de defect.
| =Arguments= | =Description= |
| ``STATUS_RECEBIDO`` | Recebe o status de Retorno da API. exemplo: ``404(Not Found)``. |
| ``STATUS_ESPERADO`` | Recebe o status Esperado da API. exemplo: ``200(Ok)``. |
| ``FUNCAO_API`` | Recebe o nome da função para que ela execute novamente caso seja diferente o resultado: exemplo: ``Retornar Address Id``. |
A resposta é um retorno JSON que contem:
- ``type`` &lt;int&gt; Tipo da resposta do Retorno. Exemplo: S(Sucesso) e E(ERRO).
- ``code`` &lt;int&gt; Codigo da reposta do retorno. Exemplo: 200(Ok) 404(Not Found).
- ``message`` &lt;str&gt; Descrição do código de retorno. Exemplo: 200(Ok) 404(Not Found).
Alguns exemplos de como usar a função:
| Valida Retorno da API                   ${Response.status_code}                 200                                     Retornar Address Id
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#PATCH|RequestsLibrary &gt;&gt;]</doc>
<if>
<branch type="IF" condition="'${status_recebido}' == '500'">
<kw name="Evaluate" library="BuiltIn">
<var>${Counter_API}</var>
<arg>${Counter_API} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.575" endtime="20231010 21:32:28.575"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Counter_API}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.575" endtime="20231010 21:32:28.575"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>\nErro ${status_recebido} recebido, tentando novamente!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.576" endtime="20231010 21:32:28.576"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.576" endtime="20231010 21:32:28.576"/>
</kw>
<if>
<branch type="IF" condition="&quot;${Counter_API}&quot; == &quot;3&quot;">
<kw name="Fatal Error" library="BuiltIn">
<arg>\nApós 3 execuções a API continua retornando erro ${status_esperado}</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.576" endtime="20231010 21:32:28.576"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.576" endtime="20231010 21:32:28.576"/>
</branch>
<status status="NOT RUN" starttime="20231010 21:32:28.576" endtime="20231010 21:32:28.576"/>
</if>
<kw name="Run Keyword" library="BuiltIn">
<arg>${Funcao_API}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.576" endtime="20231010 21:32:28.576"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.574" endtime="20231010 21:32:28.576"/>
</branch>
<branch type="ELSE IF" condition="'${status_recebido}' != '${status_esperado}'">
<kw name="Fatal Error" library="BuiltIn">
<arg>\n Retorno da API diferente do esperado ${status_recebido} != ${status_esperado}</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.577" endtime="20231010 21:32:28.577"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.577" endtime="20231010 21:32:28.577"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.574" endtime="20231010 21:32:28.577"/>
</if>
<status status="PASS" starttime="20231010 21:32:28.570" endtime="20231010 21:32:28.578"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${AvailabilityDescription}</var>
<arg>${Response}</arg>
<arg>$.resource.availabilityDescription</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:28.594" level="INFO">${AvailabilityDescription} = ['Viável – Viabilidade técnica confirmada']</msg>
<status status="PASS" starttime="20231010 21:32:28.578" endtime="20231010 21:32:28.594"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${AvailabilityDescription}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:28.595" level="INFO">${AvailabilityDescription} = ['Viável – Viabilidade técnica confirmada']</msg>
<status status="PASS" starttime="20231010 21:32:28.595" endtime="20231010 21:32:28.595"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${InventoryId}</var>
<arg>${Response}</arg>
<arg>$.resource.inventoryId</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:28.613" level="INFO">${InventoryId} = [21136833]</msg>
<status status="PASS" starttime="20231010 21:32:28.596" endtime="20231010 21:32:28.613"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${InventoryId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:32:28.614" level="INFO">${InventoryId} = [21136833]</msg>
<status status="PASS" starttime="20231010 21:32:28.613" endtime="20231010 21:32:28.614"/>
</kw>
<if>
<branch type="IF" condition="&quot;${AvailabilityDescription[0]}&quot; == &quot;${RETORNO_ESPERADO}&quot;">
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${InventoryId[0]}</arg>
<arg>inventoryId</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.622" endtime="20231010 21:32:28.622"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.622" endtime="20231010 21:32:28.622"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.622" endtime="20231010 21:32:28.622"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:28.631" level="INFO">32</msg>
<msg timestamp="20231010 21:32:28.631" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:28.623" endtime="20231010 21:32:28.631"/>
</kw>
<status status="PASS" starttime="20231010 21:32:28.622" endtime="20231010 21:32:28.632"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.632" endtime="20231010 21:32:28.632"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.632" endtime="20231010 21:32:28.632"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.633" endtime="20231010 21:32:28.633"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.633" endtime="20231010 21:32:28.633"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.632" endtime="20231010 21:32:28.633"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:28.632" endtime="20231010 21:32:28.633"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.633" endtime="20231010 21:32:28.633"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.633" endtime="20231010 21:32:28.633"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.634" endtime="20231010 21:32:28.634"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:28.642" endtime="20231010 21:32:28.642"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.632" endtime="20231010 21:32:28.642"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.621" endtime="20231010 21:32:28.642"/>
</if>
<status status="PASS" starttime="20231010 21:32:28.617" endtime="20231010 21:32:28.642"/>
</kw>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${AvailabilityDescription[0]}</arg>
<arg>availabilityDescription</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.646" endtime="20231010 21:32:28.646"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.646" endtime="20231010 21:32:28.646"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.646" endtime="20231010 21:32:28.646"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:28.655" level="INFO">32</msg>
<msg timestamp="20231010 21:32:28.656" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:28.646" endtime="20231010 21:32:28.656"/>
</kw>
<status status="PASS" starttime="20231010 21:32:28.645" endtime="20231010 21:32:28.656"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.656" endtime="20231010 21:32:28.656"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.657" endtime="20231010 21:32:28.657"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.658" endtime="20231010 21:32:28.658"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.658" endtime="20231010 21:32:28.658"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.656" endtime="20231010 21:32:28.658"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:28.656" endtime="20231010 21:32:28.658"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.658" endtime="20231010 21:32:28.658"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.659" endtime="20231010 21:32:28.659"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.659" endtime="20231010 21:32:28.659"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:28.666" endtime="20231010 21:32:28.666"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.656" endtime="20231010 21:32:28.666"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.645" endtime="20231010 21:32:28.666"/>
</if>
<status status="PASS" starttime="20231010 21:32:28.642" endtime="20231010 21:32:28.666"/>
</kw>
<status status="PASS" starttime="20231010 21:32:28.614" endtime="20231010 21:32:28.666"/>
</branch>
<branch type="ELSE">
<if>
<branch type="IF" condition="&quot;${AvailabilityDescription[0]}&quot; == &quot;Viável com obra – CDO(s) sem porta livre e em célula disponível&quot;">
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${InventoryId[0]}</arg>
<arg>inventoryId</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.667" endtime="20231010 21:32:28.667"/>
</kw>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${AvailabilityDescription[0]}</arg>
<arg>availabilityDescription</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.667" endtime="20231010 21:32:28.667"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.666" endtime="20231010 21:32:28.667"/>
</branch>
<branch type="ELSE">
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${InventoryId[0]}</arg>
<arg>inventoryId</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.667" endtime="20231010 21:32:28.667"/>
</kw>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${AvailabilityDescription[0]}</arg>
<arg>availabilityDescription</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.668" endtime="20231010 21:32:28.668"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.667" endtime="20231010 21:32:28.668"/>
</branch>
<status status="NOT RUN" starttime="20231010 21:32:28.666" endtime="20231010 21:32:28.668"/>
</if>
<status status="NOT RUN" starttime="20231010 21:32:28.666" endtime="20231010 21:32:28.668"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.614" endtime="20231010 21:32:28.668"/>
</if>
<status status="PASS" starttime="20231010 21:32:24.113" endtime="20231010 21:32:28.668"/>
</kw>
<kw name="Valida Banda Maxima" library="ROB0002_ConsultarViabilidade">
<doc>Função que valida e trata se o status é compativel ou não como ``Viável – Viabilidade técnica confirmada`` dessa forma,
habilita-se o retorno da Banda Máxima.</doc>
<if>
<branch type="IF" condition="&quot;${AvailabilityDescription[0]}&quot; == &quot;Viável – Viabilidade técnica confirmada&quot; or &quot;${AvailabilityDescription[0]}&quot; == &quot;Viável com obra - Survey sem CDO e em célula disponível&quot;">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${HighestBand}</var>
<arg>${Response}</arg>
<arg>$.resource.maxBandwidth</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:28.693" level="INFO">${HighestBand} = ['2000']</msg>
<status status="PASS" starttime="20231010 21:32:28.675" endtime="20231010 21:32:28.693"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${HighestBand}</var>
<arg>${HighestBand[0]}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231010 21:32:28.697" level="INFO">${HighestBand} = 2000</msg>
<status status="PASS" starttime="20231010 21:32:28.694" endtime="20231010 21:32:28.697"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>@{Bands}</var>
<arg>${Response}</arg>
<arg>$.resource.products.product</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:28.715" level="INFO">@{Bands} = [ [{'type': 'Banda Larga', 'catalogId': 'BL_400MB', 'name': 'VELOC_400MBPS', 'technology': ''}, {'type': 'Banda Larga', 'catalogId': 'BL_1000MB', 'name': 'VELOC_1000MBPS', 'technology': ''}] ]</msg>
<status status="PASS" starttime="20231010 21:32:28.698" endtime="20231010 21:32:28.715"/>
</kw>
<for flavor="IN">
<var>${element}</var>
<value>@{Bands[0]}</value>
<iter>
<var name="${element}">{'type': 'Banda Larga', 'catalogId': 'BL_400MB', 'name': 'VELOC_400MBPS', 'technology': ''}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${velocity}</var>
<arg>${element}</arg>
<arg>$.catalogId</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:28.739" level="INFO">${velocity} = ['BL_400MB']</msg>
<status status="PASS" starttime="20231010 21:32:28.719" endtime="20231010 21:32:28.739"/>
</kw>
<kw name="Split String" library="String">
<var>${velocity}</var>
<arg>${velocity[0]}</arg>
<arg>_</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231010 21:32:28.744" level="INFO">${velocity} = ['BL', '400MB']</msg>
<status status="PASS" starttime="20231010 21:32:28.739" endtime="20231010 21:32:28.744"/>
</kw>
<kw name="Split String" library="String">
<var>${velocity}</var>
<arg>${velocity[1]}</arg>
<arg>M</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231010 21:32:28.749" level="INFO">${velocity} = ['400', 'B']</msg>
<status status="PASS" starttime="20231010 21:32:28.744" endtime="20231010 21:32:28.749"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${velocity}</var>
<arg>${velocity[0]}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231010 21:32:28.755" level="INFO">${velocity} = 400</msg>
<status status="PASS" starttime="20231010 21:32:28.750" endtime="20231010 21:32:28.755"/>
</kw>
<if>
<branch type="IF" condition="${velocity} &gt; ${HighestBand}">
<kw>
<var>${HighestBand}=</var>
<var>${velocity}</var>
<status status="NOT RUN" starttime="20231010 21:32:28.756" endtime="20231010 21:32:28.756"/>
</kw>
<kw name="Retorna Banda Maxima" library="ROB0002_ConsultarViabilidade">
<arg>${HighestBand}</arg>
<doc>Função usada para armazenar e escrever dados na DAT relativa ao cenário.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.756" endtime="20231010 21:32:28.756"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.755" endtime="20231010 21:32:28.757"/>
</branch>
<branch type="ELSE">
<kw name="Retorna Banda Maxima" library="ROB0002_ConsultarViabilidade">
<arg>${HighestBand}</arg>
<doc>Função usada para armazenar e escrever dados na DAT relativa ao cenário.</doc>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${MAX_BAND}</arg>
<arg>maxBandWidth</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.759" endtime="20231010 21:32:28.759"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.758" endtime="20231010 21:32:28.759"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.758" endtime="20231010 21:32:28.759"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:28.772" level="INFO">32</msg>
<msg timestamp="20231010 21:32:28.772" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:28.761" endtime="20231010 21:32:28.772"/>
</kw>
<status status="PASS" starttime="20231010 21:32:28.758" endtime="20231010 21:32:28.772"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.772" endtime="20231010 21:32:28.773"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.773" endtime="20231010 21:32:28.773"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.773" endtime="20231010 21:32:28.773"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.774" endtime="20231010 21:32:28.774"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.773" endtime="20231010 21:32:28.774"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:28.773" endtime="20231010 21:32:28.774"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.774" endtime="20231010 21:32:28.774"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.774" endtime="20231010 21:32:28.774"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.775" endtime="20231010 21:32:28.775"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:28.786" endtime="20231010 21:32:28.786"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.772" endtime="20231010 21:32:28.786"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.758" endtime="20231010 21:32:28.786"/>
</if>
<status status="PASS" starttime="20231010 21:32:28.758" endtime="20231010 21:32:28.786"/>
</kw>
<status status="PASS" starttime="20231010 21:32:28.757" endtime="20231010 21:32:28.787"/>
</kw>
<status status="PASS" starttime="20231010 21:32:28.757" endtime="20231010 21:32:28.787"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.755" endtime="20231010 21:32:28.787"/>
</if>
<status status="PASS" starttime="20231010 21:32:28.719" endtime="20231010 21:32:28.787"/>
</iter>
<iter>
<var name="${element}">{'type': 'Banda Larga', 'catalogId': 'BL_1000MB', 'name': 'VELOC_1000MBPS', 'technology': ''}</var>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${velocity}</var>
<arg>${element}</arg>
<arg>$.catalogId</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20231010 21:32:28.812" level="INFO">${velocity} = ['BL_1000MB']</msg>
<status status="PASS" starttime="20231010 21:32:28.788" endtime="20231010 21:32:28.812"/>
</kw>
<kw name="Split String" library="String">
<var>${velocity}</var>
<arg>${velocity[0]}</arg>
<arg>_</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231010 21:32:28.818" level="INFO">${velocity} = ['BL', '1000MB']</msg>
<status status="PASS" starttime="20231010 21:32:28.813" endtime="20231010 21:32:28.818"/>
</kw>
<kw name="Split String" library="String">
<var>${velocity}</var>
<arg>${velocity[1]}</arg>
<arg>M</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231010 21:32:28.824" level="INFO">${velocity} = ['1000', 'B']</msg>
<status status="PASS" starttime="20231010 21:32:28.818" endtime="20231010 21:32:28.824"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${velocity}</var>
<arg>${velocity[0]}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231010 21:32:28.830" level="INFO">${velocity} = 1000</msg>
<status status="PASS" starttime="20231010 21:32:28.825" endtime="20231010 21:32:28.830"/>
</kw>
<if>
<branch type="IF" condition="${velocity} &gt; ${HighestBand}">
<kw>
<var>${HighestBand}=</var>
<var>${velocity}</var>
<status status="NOT RUN" starttime="20231010 21:32:28.830" endtime="20231010 21:32:28.830"/>
</kw>
<kw name="Retorna Banda Maxima" library="ROB0002_ConsultarViabilidade">
<arg>${HighestBand}</arg>
<doc>Função usada para armazenar e escrever dados na DAT relativa ao cenário.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.830" endtime="20231010 21:32:28.830"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.830" endtime="20231010 21:32:28.831"/>
</branch>
<branch type="ELSE">
<kw name="Retorna Banda Maxima" library="ROB0002_ConsultarViabilidade">
<arg>${HighestBand}</arg>
<doc>Função usada para armazenar e escrever dados na DAT relativa ao cenário.</doc>
<kw name="Escrever Variavel na Planilha" library="RES_EXCEL">
<arg>${MAX_BAND}</arg>
<arg>maxBandWidth</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a escrita de valores em determinada coluna na planilha de parâmetros.</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<if>
<branch type="IF" condition="'${Valor}' == &quot;None&quot;">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Valor}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.832" endtime="20231010 21:32:28.833"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.832" endtime="20231010 21:32:28.833"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.832" endtime="20231010 21:32:28.833"/>
</if>
<kw name="Atualizar Dados Dat By Id" library="dat">
<var>${DAT_DB}</var>
<arg>${DAT_DB}</arg>
<arg>${NomeColuna}</arg>
<arg>${Valor}</arg>
<msg timestamp="20231010 21:32:28.843" level="INFO">32</msg>
<msg timestamp="20231010 21:32:28.843" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:32:28.833" endtime="20231010 21:32:28.843"/>
</kw>
<status status="PASS" starttime="20231010 21:32:28.832" endtime="20231010 21:32:28.843"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${DAT_CENARIO}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.844" endtime="20231010 21:32:28.844"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.844" endtime="20231010 21:32:28.845"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.845" endtime="20231010 21:32:28.845"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.845" endtime="20231010 21:32:28.845"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.844" endtime="20231010 21:32:28.845"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:32:28.844" endtime="20231010 21:32:28.845"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.845" endtime="20231010 21:32:28.846"/>
</kw>
<kw name="Set Cell Value" library="RPA.Excel.Files">
<arg>row=${NumLinha}</arg>
<arg>column=${i}</arg>
<arg>value=${Valor}</arg>
<arg>name=${NomeAba}</arg>
<doc>Set a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.846" endtime="20231010 21:32:28.846"/>
</kw>
<kw name="Save Workbook" library="RPA.Excel.Files">
<doc>Save the active workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.846" endtime="20231010 21:32:28.846"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:32:28.858" endtime="20231010 21:32:28.859"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.843" endtime="20231010 21:32:28.859"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.832" endtime="20231010 21:32:28.859"/>
</if>
<status status="PASS" starttime="20231010 21:32:28.831" endtime="20231010 21:32:28.859"/>
</kw>
<status status="PASS" starttime="20231010 21:32:28.831" endtime="20231010 21:32:28.859"/>
</kw>
<status status="PASS" starttime="20231010 21:32:28.831" endtime="20231010 21:32:28.859"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.830" endtime="20231010 21:32:28.859"/>
</if>
<status status="PASS" starttime="20231010 21:32:28.787" endtime="20231010 21:32:28.859"/>
</iter>
<status status="PASS" starttime="20231010 21:32:28.715" endtime="20231010 21:32:28.859"/>
</for>
<status status="PASS" starttime="20231010 21:32:28.669" endtime="20231010 21:32:28.860"/>
</branch>
<branch type="ELSE">
<kw name="Fatal Error" library="BuiltIn">
<arg>Não foi possível encontrar a Banda Máxima devido inviabilidade do endereço.</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20231010 21:32:28.861" endtime="20231010 21:32:28.861"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:32:28.860" endtime="20231010 21:32:28.861"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.669" endtime="20231010 21:32:28.861"/>
</if>
<status status="PASS" starttime="20231010 21:32:28.669" endtime="20231010 21:32:28.861"/>
</kw>
<status status="PASS" starttime="20231010 21:32:24.113" endtime="20231010 21:32:28.861"/>
</kw>
<kw name="Fecha CT" library="DB">
<arg>API</arg>
<arg>02_06_Realizar_Consulta_de_Slots</arg>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Log" library="BuiltIn">
<arg>${DAT_DB}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:32:28.863" level="INFO">32</msg>
<status status="PASS" starttime="20231010 21:32:28.862" endtime="20231010 21:32:28.863"/>
</kw>
<kw name="Atualizar Steps Dat" library="dat">
<arg>${DAT_DB}</arg>
<arg>${RESPONSAVEL}</arg>
<arg>${SYSTEM}</arg>
<arg>${NEW_STEP}</arg>
<msg timestamp="20231010 21:32:28.870" level="INFO">DAT atualizado com sucesso!</msg>
<status status="PASS" starttime="20231010 21:32:28.863" endtime="20231010 21:32:28.870"/>
</kw>
<status status="PASS" starttime="20231010 21:32:28.862" endtime="20231010 21:32:28.870"/>
</branch>
<status status="PASS" starttime="20231010 21:32:28.862" endtime="20231010 21:32:28.870"/>
</if>
<status status="PASS" starttime="20231010 21:32:28.862" endtime="20231010 21:32:28.871"/>
</kw>
<tag>02_04_5_Realizar_Consulta_de_Viabilidade</tag>
<tag>COMPLETO</tag>
<status status="PASS" starttime="20231010 21:32:22.777" endtime="20231010 21:32:28.871"/>
</test>
<doc>Agrupador responsavel por chamar TC dos ROBS referentes ao cenario
INPUT: Address, Customer_Name, Phone_Number, Reference,
OUTPUT: Address_Id, TypeComplement1, Value1, TypeComplement2, Value2, TypeComplement3, Value3,</doc>
<status status="PASS" starttime="20231010 21:32:19.328" endtime="20231010 21:32:28.879"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">02_04_5_Realizar_Consulta_de_Viabilidade</stat>
<stat pass="1" fail="0" skip="0">COMPLETO</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="002 AtivacaoSemNumResidenciaViaFSL">002 AtivacaoSemNumResidenciaViaFSL</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20231010 21:32:19.662" level="ERROR">Error in file '/robot/test/SCRIPTS/RESOURCE/COMMON/RES_UTIL.robot' on line 49: Creating keyword '' failed: Multiple errors:
- User keyword cannot be empty.
- User keyword name cannot be empty.</msg>
<msg timestamp="20231010 21:32:19.888" level="WARN">Any `RPA.*.Application` library works only on Windows platform!</msg>
<msg timestamp="20231010 21:32:19.889" level="WARN">This Excel application library requires Windows dependencies to work.</msg>
<msg timestamp="20231010 21:32:20.611" level="WARN">Imported library '/robot/test/SCRIPTS/RESOURCE/COMMON/LIB/lib_geral.py' contains no keywords.</msg>
</errors>
</robot>

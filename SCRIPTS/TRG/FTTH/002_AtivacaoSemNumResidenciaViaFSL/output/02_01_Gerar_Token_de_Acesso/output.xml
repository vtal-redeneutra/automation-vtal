<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.10 on linux)" generated="20231010 21:31:54.344" rpa="false" schemaversion="4">
<suite id="s1" name="002 AtivacaoSemNumResidenciaViaFSL" source="/robot/test/SCRIPTS/TRG/FTTH/002_AtivacaoSemNumResidenciaViaFSL/002_AtivacaoSemNumResidenciaViaFSL.robot">
<test id="s1-t1" name="02.01 - Gerar Token de Acesso" line="44">
<kw name="Inicia CT" library="DB">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${PORTAL}</var>
<arg>Variable Should Exist</arg>
<arg>${PORTAL}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${PORTAL}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20231010 21:31:57.991" endtime="20231010 21:31:57.991"/>
</kw>
<msg timestamp="20231010 21:31:57.991" level="INFO">${PORTAL} = True</msg>
<status status="PASS" starttime="20231010 21:31:57.991" endtime="20231010 21:31:57.991"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_step}</var>
<arg>Variable Should Exist</arg>
<arg>${STEP}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${STEP}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20231010 21:31:57.992" endtime="20231010 21:31:57.992"/>
</kw>
<msg timestamp="20231010 21:31:57.992" level="INFO">${check_step} = True</msg>
<status status="PASS" starttime="20231010 21:31:57.992" endtime="20231010 21:31:57.992"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PORTAL}</arg>
<arg>${PORTAL}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:31:57.992" level="INFO">${PORTAL} = True</msg>
<status status="PASS" starttime="20231010 21:31:57.992" endtime="20231010 21:31:57.992"/>
</kw>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Log" library="BuiltIn">
<arg>${CEP}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:31:57.993" level="INFO">00000000</msg>
<status status="PASS" starttime="20231010 21:31:57.993" endtime="20231010 21:31:57.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${NUMERO}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:31:57.993" level="INFO">00</msg>
<status status="PASS" starttime="20231010 21:31:57.993" endtime="20231010 21:31:57.993"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${check_step}</arg>
<arg>Set Step</arg>
<arg>${STEP}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Step" library="DB">
<arg>${STEP}</arg>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STEP}</arg>
<arg>${STEP}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:31:57.994" level="INFO">${STEP} = 02_01_Gerar_Token_de_Acesso</msg>
<status status="PASS" starttime="20231010 21:31:57.994" endtime="20231010 21:31:57.994"/>
</kw>
<status status="PASS" starttime="20231010 21:31:57.994" endtime="20231010 21:31:57.994"/>
</kw>
<status status="PASS" starttime="20231010 21:31:57.993" endtime="20231010 21:31:57.994"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPONSAVEL}</arg>
<arg>${RESPONSAVEL}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:31:57.995" level="INFO">${RESPONSAVEL} = galeite</msg>
<status status="PASS" starttime="20231010 21:31:57.994" endtime="20231010 21:31:57.995"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${AUTHENTICATION}</arg>
<arg>${AUTHENTICATION}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:31:57.995" level="INFO">${AUTHENTICATION} = Whitelabel</msg>
<status status="PASS" starttime="20231010 21:31:57.995" endtime="20231010 21:31:57.995"/>
</kw>
<kw name="Buscar Dat Do Usuario" library="dat">
<var>${DAT_DB}</var>
<arg>${RESPONSAVEL}</arg>
<arg>${STEP}</arg>
<msg timestamp="20231010 21:31:58.001" level="INFO">DAT não encontrada!</msg>
<msg timestamp="20231010 21:31:58.002" level="INFO">${DAT_DB} = None</msg>
<status status="PASS" starttime="20231010 21:31:57.995" endtime="20231010 21:31:58.002"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${DAT_DB}</arg>
<arg>${DAT_DB}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:31:58.003" level="INFO">${DAT_DB} = None</msg>
<status status="PASS" starttime="20231010 21:31:58.002" endtime="20231010 21:31:58.003"/>
</kw>
<status status="PASS" starttime="20231010 21:31:57.993" endtime="20231010 21:31:58.003"/>
</branch>
<status status="PASS" starttime="20231010 21:31:57.993" endtime="20231010 21:31:58.003"/>
</if>
<status status="PASS" starttime="20231010 21:31:57.990" endtime="20231010 21:31:58.004"/>
</kw>
<kw name="Criar Tabela Execucao" library="DB">
<arg>${RESPONSAVEL}</arg>
<kw name="Criar Dat" library="dat">
<var>${DAT_DB}</var>
<arg>${RESPONSAVEL}</arg>
<msg timestamp="20231010 21:31:58.010" level="INFO">32
DAT criada com sucesso!</msg>
<msg timestamp="20231010 21:31:58.010" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:31:58.005" endtime="20231010 21:31:58.010"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${DAT_DB}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:31:58.011" level="INFO">${DAT_DB} = 32</msg>
<status status="PASS" starttime="20231010 21:31:58.010" endtime="20231010 21:31:58.011"/>
</kw>
<status status="PASS" starttime="20231010 21:31:58.004" endtime="20231010 21:31:58.011"/>
</kw>
<kw name="Retornar Token Vtal" library="RES_API">
<doc>Função que usa o usuario e senha para autenticar e receber o valor do Token para fazer as próximas requisições.
| ``HEADERS_TOKEN`` | Informações necessárias para o token, como qual ferramenta está executando. Exemplo:  User-Agent=RobotFramework. |
| ``USUARIO`` | Usuario cadastrado para fazer a autenticação. |
| ``SENHA`` | Senha cadastrado para fazer a autenticação. |
| ``validade_token`` | Variavel com o tempo que expira a validade do token, salva na planilha. |
A resposta é um retorno XML que contem:
- ``access_token`` &lt;str&gt; Cadeia de caracteres que serve de autenticação para requisições.
- ``token_type`` &lt;str&gt; Descrição do tipo de token, pode ser uma cadeia de str ou de int.
- ``expires_in`` &lt;int&gt; Valor em segundos que esse token será valido.
- ``scope`` &lt;str&gt; Escopo do token.
Alguns exemplos de como usar a função:
| Retornar Token Vtal
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#POST%20On%20Session|RequestsLibrary &gt;&gt;]</doc>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${Credencial}</var>
<arg>Credencial</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:31:58.017" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:31:58.012" endtime="20231010 21:31:58.017"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:31:58.021" level="INFO">${Valor} = Whitelabel</msg>
<status status="PASS" starttime="20231010 21:31:58.017" endtime="20231010 21:31:58.021"/>
</kw>
<status status="PASS" starttime="20231010 21:31:58.012" endtime="20231010 21:31:58.022"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.022" endtime="20231010 21:31:58.023"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.023" endtime="20231010 21:31:58.024"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.024" endtime="20231010 21:31:58.024"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.024" endtime="20231010 21:31:58.024"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.023" endtime="20231010 21:31:58.024"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:31:58.023" endtime="20231010 21:31:58.024"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.024" endtime="20231010 21:31:58.024"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.024" endtime="20231010 21:31:58.025"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:31:58.032" endtime="20231010 21:31:58.032"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.022" endtime="20231010 21:31:58.032"/>
</branch>
<status status="PASS" starttime="20231010 21:31:58.012" endtime="20231010 21:31:58.032"/>
</if>
<msg timestamp="20231010 21:31:58.032" level="INFO">${Credencial} = Whitelabel</msg>
<status status="PASS" starttime="20231010 21:31:58.011" endtime="20231010 21:31:58.032"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${TokenExcel}</var>
<arg>Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:31:58.035" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:31:58.033" endtime="20231010 21:31:58.035"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:31:58.041" level="INFO">${Valor} = </msg>
<status status="PASS" starttime="20231010 21:31:58.036" endtime="20231010 21:31:58.041"/>
</kw>
<status status="PASS" starttime="20231010 21:31:58.033" endtime="20231010 21:31:58.041"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.042" endtime="20231010 21:31:58.042"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.042" endtime="20231010 21:31:58.042"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.042" endtime="20231010 21:31:58.042"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.043" endtime="20231010 21:31:58.043"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.042" endtime="20231010 21:31:58.043"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:31:58.042" endtime="20231010 21:31:58.043"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.043" endtime="20231010 21:31:58.043"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.043" endtime="20231010 21:31:58.043"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:31:58.053" endtime="20231010 21:31:58.053"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.041" endtime="20231010 21:31:58.053"/>
</branch>
<status status="PASS" starttime="20231010 21:31:58.033" endtime="20231010 21:31:58.053"/>
</if>
<msg timestamp="20231010 21:31:58.054" level="INFO">${TokenExcel} = </msg>
<status status="PASS" starttime="20231010 21:31:58.032" endtime="20231010 21:31:58.054"/>
</kw>
<if>
<branch type="IF" condition="&quot;${Credencial}&quot; == &quot;Whitelabel&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais Whitelabel foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231010 21:31:58.055" endtime="20231010 21:31:58.055"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyMi1hMTQ0LTNhZGZjZjA2MWY2Mw==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:31:58.056" level="INFO">${Authorization} = Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyMi1hMTQ0LTNhZGZjZjA2MWY2Mw==</msg>
<status status="PASS" starttime="20231010 21:31:58.055" endtime="20231010 21:31:58.056"/>
</kw>
<status status="PASS" starttime="20231010 21:31:58.054" endtime="20231010 21:31:58.056"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;FTTP&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais FTTP foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.056" endtime="20231010 21:31:58.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic MzNkNTc3Y2QtYzZmMS00YzMxLTllYzgtMjRiY2IyZWYyMmI3OjQyNWZkYzUyLTIzMmMtNDQ2YS1iOTViLWQyNmFkZGZmYjBkYw==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.056" endtime="20231010 21:31:58.056"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.056" endtime="20231010 21:31:58.056"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;Bitstream&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais Bitstream foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.057" endtime="20231010 21:31:58.057"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic NDQ0MzdlMjAtMmFjNi00YzY3LTk2NzMtYTMyMDI2N2ZjNmE3OjE1M2ZkYmU4LTcxMzUtNDJiNC05MDQ5LTI4MDM2NmI4MDU2YQ==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.058" endtime="20231010 21:31:58.058"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.057" endtime="20231010 21:31:58.058"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;CPOI&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais CP OI foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.058" endtime="20231010 21:31:58.058"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic Yzg2MzhhNTUtYTdmNC00OTBlLWIyNGItNWZhNjQxMDUwZDQyOmNjZjUyYzc3LTliN2UtNGM2NC04M2NkLTIwZmY3YWQzZjFkZQ==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.058" endtime="20231010 21:31:58.058"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.058" endtime="20231010 21:31:58.058"/>
</branch>
<branch type="ELSE IF" condition="&quot;${Credencial}&quot; == &quot;Voip&quot;">
<kw name="Log To Console" library="BuiltIn">
<arg>\nAtencao --&gt; Credenciais Voip foram utilizadas para o cenario.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.059" endtime="20231010 21:31:58.059"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Authorization}</var>
<arg>Basic Yzg2MzhhNTUtYTdmNC00OTBlLWIyNGItNWZhNjQxMDUwZDQyOmNjZjUyYzc3LTliN2UtNGM2NC04M2NkLTIwZmY3YWQzZjFkZQ==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.059" endtime="20231010 21:31:58.059"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.059" endtime="20231010 21:31:58.059"/>
</branch>
<status status="PASS" starttime="20231010 21:31:58.054" endtime="20231010 21:31:58.059"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${HeaderToken}</var>
<arg>Content-Type=application/x-www-form-urlencoded</arg>
<arg>User-Agent=RobotFramework</arg>
<arg>Accept=*/*</arg>
<arg>Authorization=${Authorization}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20231010 21:31:58.060" level="INFO">${HeaderToken} = {'Content-Type': 'application/x-www-form-urlencoded', 'User-Agent': 'RobotFramework', 'Accept': '*/*', 'Authorization': 'Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyM...</msg>
<status status="PASS" starttime="20231010 21:31:58.059" endtime="20231010 21:31:58.060"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${UrlApi}</var>
<arg>URL_Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:31:58.063" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:31:58.061" endtime="20231010 21:31:58.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:31:58.067" level="INFO">${Valor} = https://apitrg.vtal.com.br</msg>
<status status="PASS" starttime="20231010 21:31:58.063" endtime="20231010 21:31:58.067"/>
</kw>
<status status="PASS" starttime="20231010 21:31:58.060" endtime="20231010 21:31:58.067"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.068" endtime="20231010 21:31:58.068"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.069" endtime="20231010 21:31:58.069"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.069" endtime="20231010 21:31:58.069"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.069" endtime="20231010 21:31:58.069"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.068" endtime="20231010 21:31:58.070"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:31:58.068" endtime="20231010 21:31:58.070"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.070" endtime="20231010 21:31:58.070"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.070" endtime="20231010 21:31:58.070"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:31:58.078" endtime="20231010 21:31:58.078"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.067" endtime="20231010 21:31:58.078"/>
</branch>
<status status="PASS" starttime="20231010 21:31:58.060" endtime="20231010 21:31:58.078"/>
</if>
<msg timestamp="20231010 21:31:58.079" level="INFO">${UrlApi} = https://apitrg.vtal.com.br</msg>
<status status="PASS" starttime="20231010 21:31:58.060" endtime="20231010 21:31:58.079"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${Usuario}</var>
<arg>Usuario_Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:31:58.081" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:31:58.079" endtime="20231010 21:31:58.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:31:58.085" level="INFO">${Valor} = d6c3e319-d388-4128-96f8-154da4c71526</msg>
<status status="PASS" starttime="20231010 21:31:58.081" endtime="20231010 21:31:58.085"/>
</kw>
<status status="PASS" starttime="20231010 21:31:58.079" endtime="20231010 21:31:58.085"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.086" endtime="20231010 21:31:58.086"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.087" endtime="20231010 21:31:58.087"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.087" endtime="20231010 21:31:58.087"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.087" endtime="20231010 21:31:58.087"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.086" endtime="20231010 21:31:58.087"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:31:58.086" endtime="20231010 21:31:58.087"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.088" endtime="20231010 21:31:58.088"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.088" endtime="20231010 21:31:58.088"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:31:58.095" endtime="20231010 21:31:58.095"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.085" endtime="20231010 21:31:58.095"/>
</branch>
<status status="PASS" starttime="20231010 21:31:58.079" endtime="20231010 21:31:58.095"/>
</if>
<msg timestamp="20231010 21:31:58.095" level="INFO">${Usuario} = d6c3e319-d388-4128-96f8-154da4c71526</msg>
<status status="PASS" starttime="20231010 21:31:58.079" endtime="20231010 21:31:58.095"/>
</kw>
<kw name="Ler Variavel Param Global" library="RES_EXCEL">
<var>${Senha}</var>
<arg>Senha_Token</arg>
<arg>Global</arg>
<doc>Keyword responsável por realizar a leitura de valores de determinada coluna da planilha PARAN GLOBAL</doc>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Ler Global Db" library="globals">
<var>${Data}</var>
<arg>${AUTHENTICATION}</arg>
<msg timestamp="20231010 21:31:58.098" level="INFO">${Data} = 1</msg>
<status status="PASS" starttime="20231010 21:31:58.096" endtime="20231010 21:31:58.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Valor}</var>
<arg>${Data.${NomeColuna}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231010 21:31:58.102" level="INFO">${Valor} = 0917ff46-9ed9-4dea-babd-baba3e2a55e3</msg>
<status status="PASS" starttime="20231010 21:31:58.098" endtime="20231010 21:31:58.102"/>
</kw>
<status status="PASS" starttime="20231010 21:31:58.095" endtime="20231010 21:31:58.102"/>
</branch>
<branch type="ELSE">
<kw name="Open Workbook" library="RPA.Excel.Files">
<arg>${PARAM_GLOBAL}</arg>
<arg>data_only=True</arg>
<doc>Open an existing Excel workbook.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.102" endtime="20231010 21:31:58.102"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${1}</value>
<value>${MAX_COLUNAS}</value>
<iter>
<var name="${i}"/>
<kw name="Get Cell Value" library="RPA.Excel.Files">
<var>${Coluna}</var>
<arg>row=1</arg>
<arg>column=${i}</arg>
<arg>name=${NomeAba}</arg>
<doc>Get a cell value in the given worksheet.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.102" endtime="20231010 21:31:58.103"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Passed}</var>
<arg>Should Be Equal</arg>
<arg>${Coluna}</arg>
<arg>${NomeColuna}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.103" endtime="20231010 21:31:58.103"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${Passed}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.103" endtime="20231010 21:31:58.103"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.102" endtime="20231010 21:31:58.103"/>
</iter>
<status status="NOT RUN" starttime="20231010 21:31:58.102" endtime="20231010 21:31:58.103"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Passed} == False</arg>
<arg>Fail</arg>
<arg>Função percorreu ${MAX_COLUNAS} colunas e não encontrou a coluna ${NomeColuna} desejada</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.103" endtime="20231010 21:31:58.104"/>
</kw>
<kw name="Get Worksheet Value" library="RPA.Excel.Files">
<var>${Valor}</var>
<arg>row=2</arg>
<arg>column=${i}</arg>
<arg>name=${nome_aba}</arg>
<doc>Alias for keyword ``Get cell value``, see the original keyword
for documentation.</doc>
<status status="NOT RUN" starttime="20231010 21:31:58.104" endtime="20231010 21:31:58.104"/>
</kw>
<kw name="[Teardown]">
<arg>Close Workbook</arg>
<status status="NOT RUN" starttime="20231010 21:31:58.111" endtime="20231010 21:31:58.111"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:58.102" endtime="20231010 21:31:58.111"/>
</branch>
<status status="PASS" starttime="20231010 21:31:58.095" endtime="20231010 21:31:58.111"/>
</if>
<msg timestamp="20231010 21:31:58.111" level="INFO">${Senha} = 0917ff46-9ed9-4dea-babd-baba3e2a55e3</msg>
<status status="PASS" starttime="20231010 21:31:58.095" endtime="20231010 21:31:58.111"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${UrlApi}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231010 21:31:58.111" level="INFO">${UrlApi} = https://apitrg.vtal.com.br</msg>
<status status="PASS" starttime="20231010 21:31:58.111" endtime="20231010 21:31:58.111"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${Usuario}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231010 21:31:58.112" level="INFO">${Usuario} = d6c3e319-d388-4128-96f8-154da4c71526</msg>
<status status="PASS" starttime="20231010 21:31:58.112" endtime="20231010 21:31:58.112"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${Senha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231010 21:31:58.112" level="INFO">${Senha} = 0917ff46-9ed9-4dea-babd-baba3e2a55e3</msg>
<status status="PASS" starttime="20231010 21:31:58.112" endtime="20231010 21:31:58.112"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>StartAPI</arg>
<arg>${UrlApi}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20231010 21:31:58.113" level="INFO">Creating Session using : alias=StartAPI, url=https://apitrg.vtal.com.br, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20231010 21:31:58.112" endtime="20231010 21:31:58.113"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>StartAPI</arg>
<arg>${AUTH}</arg>
<arg>data={"username":"${Usuario}","password":"${Senha}"}</arg>
<arg>headers=${HeaderToken}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20231010 21:31:59.337" level="INFO">POST Request : url=https://apitrg.vtal.com.br/auth/oauth/v2/token?grant_type=client_credentials&amp;scope=fttx 
 path_url=/auth/oauth/v2/token?grant_type=client_credentials&amp;scope=fttx 
 headers={'User-Agent': 'RobotFramework', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Basic ZDhhODhmZGEtZGI1Ni00MTQzLWFjM2YtZTY3OTZhYTMwMTg2OjgwMmQyYWE5LTg0MjItNGEyMi1hMTQ0LTNhZGZjZjA2MWY2Mw==', 'Content-Length': '101'} 
 body={"username":"d6c3e319-d388-4128-96f8-154da4c71526","password":"0917ff46-9ed9-4dea-babd-baba3e2a55e3"} 
 </msg>
<msg timestamp="20231010 21:31:59.337" level="INFO">POST Response : url=https://apitrg.vtal.com.br/auth/oauth/v2/token?grant_type=client_credentials&amp;scope=fttx 
 status=200, reason=OK 
 headers={'Pragma': 'no-cache', 'Cache-Control': 'no-store', 'Content-Encoding': 'gzip', 'Content-Type': 'application/json;charset=UTF-8', 'Content-Length': '126', 'Date': 'Tue, 10 Oct 2023 21:32:01 GMT', 'Server': 'Layer7-API-Gateway', 'Set-Cookie': 'BIGipServerRD16_POOL_APIGQX02LB_8443=rd16o00000000000000000000ffffac128415o8443; path=/; Httponly; Secure'} 
 body={
  "access_token":"d97a198e-37af-4094-bb01-126ef9e9fe8d",
  "token_type":"Bearer",
  "expires_in":3600,
  "scope":"fttx"
} 
 </msg>
<msg timestamp="20231010 21:31:59.337" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20231010 21:31:58.113" endtime="20231010 21:31:59.337"/>
</kw>
<kw name="Valida Retorno da API" library="RES_API">
<arg>${Response.status_code}</arg>
<arg>200</arg>
<arg>Retornar Token Vtal</arg>
<doc>Função usada para mandar validar o retorno da API, caso um retorno 500 seja dado muitas vezes ou  um retorno diferente do esperado ele cria um documento de defect.
| =Arguments= | =Description= |
| ``STATUS_RECEBIDO`` | Recebe o status de Retorno da API. exemplo: ``404(Not Found)``. |
| ``STATUS_ESPERADO`` | Recebe o status Esperado da API. exemplo: ``200(Ok)``. |
| ``FUNCAO_API`` | Recebe o nome da função para que ela execute novamente caso seja diferente o resultado: exemplo: ``Retornar Address Id``. |
A resposta é um retorno JSON que contem:
- ``type`` &lt;int&gt; Tipo da resposta do Retorno. Exemplo: S(Sucesso) e E(ERRO).
- ``code`` &lt;int&gt; Codigo da reposta do retorno. Exemplo: 200(Ok) 404(Not Found).
- ``message`` &lt;str&gt; Descrição do código de retorno. Exemplo: 200(Ok) 404(Not Found).
Alguns exemplos de como usar a função:
| Valida Retorno da API                   200                 200                                     Retornar Address Id
Biblioteca utilizada: [https://marketsquare.github.io/robotframework-requests/doc/RequestsLibrary.html#PATCH|RequestsLibrary &gt;&gt;]</doc>
<if>
<branch type="IF" condition="'${status_recebido}' == '500'">
<kw name="Evaluate" library="BuiltIn">
<var>${Counter_API}</var>
<arg>${Counter_API} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231010 21:31:59.345" endtime="20231010 21:31:59.345"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Counter_API}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231010 21:31:59.345" endtime="20231010 21:31:59.345"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>\nErro ${status_recebido} recebido, tentando novamente!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231010 21:31:59.345" endtime="20231010 21:31:59.346"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231010 21:31:59.346" endtime="20231010 21:31:59.346"/>
</kw>
<if>
<branch type="IF" condition="&quot;${Counter_API}&quot; == &quot;3&quot;">
<kw name="Fatal Error" library="BuiltIn">
<arg>\nApós 3 execuções a API continua retornando erro ${status_esperado}</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20231010 21:31:59.346" endtime="20231010 21:31:59.346"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:59.346" endtime="20231010 21:31:59.346"/>
</branch>
<status status="NOT RUN" starttime="20231010 21:31:59.346" endtime="20231010 21:31:59.347"/>
</if>
<kw name="Run Keyword" library="BuiltIn">
<arg>${Funcao_API}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231010 21:31:59.347" endtime="20231010 21:31:59.347"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:59.345" endtime="20231010 21:31:59.347"/>
</branch>
<branch type="ELSE IF" condition="'${status_recebido}' != '${status_esperado}'">
<kw name="Fatal Error" library="BuiltIn">
<arg>\n Retorno da API diferente do esperado ${status_recebido} != ${status_esperado}</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20231010 21:31:59.347" endtime="20231010 21:31:59.347"/>
</kw>
<status status="NOT RUN" starttime="20231010 21:31:59.347" endtime="20231010 21:31:59.347"/>
</branch>
<status status="PASS" starttime="20231010 21:31:59.345" endtime="20231010 21:31:59.347"/>
</if>
<status status="PASS" starttime="20231010 21:31:59.341" endtime="20231010 21:31:59.348"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${Token}</var>
<arg>${Response.json()}</arg>
<arg>access_token</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20231010 21:31:59.352" level="INFO">${Token} = d97a198e-37af-4094-bb01-126ef9e9fe8d</msg>
<status status="PASS" starttime="20231010 21:31:59.348" endtime="20231010 21:31:59.352"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231010 21:31:59.352" level="INFO">${Token} = d97a198e-37af-4094-bb01-126ef9e9fe8d</msg>
<status status="PASS" starttime="20231010 21:31:59.352" endtime="20231010 21:31:59.352"/>
</kw>
<status status="PASS" starttime="20231010 21:31:58.011" endtime="20231010 21:31:59.352"/>
</kw>
<kw name="Fecha CT" library="DB">
<arg>API</arg>
<arg>02_02_3_Realizar_Consulta_de_Logradouro</arg>
<if>
<branch type="IF" condition="${PORTAL}">
<kw name="Log" library="BuiltIn">
<arg>${DAT_DB}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231010 21:31:59.353" level="INFO">32</msg>
<status status="PASS" starttime="20231010 21:31:59.353" endtime="20231010 21:31:59.353"/>
</kw>
<kw name="Atualizar Steps Dat" library="dat">
<arg>${DAT_DB}</arg>
<arg>${RESPONSAVEL}</arg>
<arg>${SYSTEM}</arg>
<arg>${NEW_STEP}</arg>
<msg timestamp="20231010 21:31:59.362" level="INFO">DAT atualizado com sucesso!</msg>
<status status="PASS" starttime="20231010 21:31:59.354" endtime="20231010 21:31:59.362"/>
</kw>
<status status="PASS" starttime="20231010 21:31:59.353" endtime="20231010 21:31:59.362"/>
</branch>
<status status="PASS" starttime="20231010 21:31:59.353" endtime="20231010 21:31:59.362"/>
</if>
<status status="PASS" starttime="20231010 21:31:59.352" endtime="20231010 21:31:59.362"/>
</kw>
<tag>02_01_Gerar_Token_de_Acesso</tag>
<tag>COMPLETO</tag>
<status status="PASS" starttime="20231010 21:31:57.986" endtime="20231010 21:31:59.362"/>
</test>
<doc>Agrupador responsavel por chamar TC dos ROBS referentes ao cenario
INPUT: Address, Customer_Name, Phone_Number, Reference,
OUTPUT: Address_Id, TypeComplement1, Value1, TypeComplement2, Value2, TypeComplement3, Value3,</doc>
<status status="PASS" starttime="20231010 21:31:54.348" endtime="20231010 21:31:59.372"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">02_01_Gerar_Token_de_Acesso</stat>
<stat pass="1" fail="0" skip="0">COMPLETO</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="002 AtivacaoSemNumResidenciaViaFSL">002 AtivacaoSemNumResidenciaViaFSL</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20231010 21:31:54.722" level="ERROR">Error in file '/robot/test/SCRIPTS/RESOURCE/COMMON/RES_UTIL.robot' on line 49: Creating keyword '' failed: Multiple errors:
- User keyword cannot be empty.
- User keyword name cannot be empty.</msg>
<msg timestamp="20231010 21:31:54.973" level="WARN">Any `RPA.*.Application` library works only on Windows platform!</msg>
<msg timestamp="20231010 21:31:54.973" level="WARN">This Excel application library requires Windows dependencies to work.</msg>
<msg timestamp="20231010 21:31:55.691" level="WARN">Imported library '/robot/test/SCRIPTS/RESOURCE/COMMON/LIB/lib_geral.py' contains no keywords.</msg>
</errors>
</robot>
